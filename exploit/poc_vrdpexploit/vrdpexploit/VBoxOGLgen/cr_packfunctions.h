/* Copyright (c) 2001, Stanford University
	All rights reserved.

	See the file LICENSE.txt for information on redistributing this software. */
	
#ifndef CR_PACKFUNCTIONS_H
#define CR_PACKFUNCTIONS_H

/* DO NOT EDIT - THIS FILE GENERATED BY THE pack_header.py SCRIPT */

/* Prototypes for the OpenGL packer functions in packer.c and pack_bbox.c */

#include "chromium.h"
#include "state/cr_client.h"
#include "cr_pack.h"

#ifdef WINDOWS
#define PACK_APIENTRY __stdcall
#else
#define PACK_APIENTRY
#endif

#ifdef __cplusplus
extern "C" {
#endif

void PACK_APIENTRY crPackAccum(CR_PACKER_CONTEXT_ARGDECL GLenum op, GLfloat value);
void PACK_APIENTRY crPackAccumSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum op, GLfloat value);
void PACK_APIENTRY crPackActiveStencilFaceEXT(CR_PACKER_CONTEXT_ARGDECL GLenum face);
void PACK_APIENTRY crPackActiveStencilFaceEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face);
void PACK_APIENTRY crPackActiveTextureARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture);
void PACK_APIENTRY crPackActiveTextureARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture);
void PACK_APIENTRY crPackAlphaFunc(CR_PACKER_CONTEXT_ARGDECL GLenum func, GLclampf ref);
void PACK_APIENTRY crPackAlphaFuncSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum func, GLclampf ref);
void PACK_APIENTRY crPackAreProgramsResidentNV(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids, GLboolean * residences, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackAreProgramsResidentNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids, GLboolean * residences, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackAreTexturesResident(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures, GLboolean * residences, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackAreTexturesResidentSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures, GLboolean * residences, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackArrayElement(CR_PACKER_CONTEXT_ARGDECL GLint i);
void PACK_APIENTRY crPackArrayElementSWAP(CR_PACKER_CONTEXT_ARGDECL GLint i);
void PACK_APIENTRY crPackAttachShader(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint shader);
void PACK_APIENTRY crPackAttachShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint shader);
void PACK_APIENTRY crPackBarrierCreateCR(CR_PACKER_CONTEXT_ARGDECL GLuint name, GLuint count);
void PACK_APIENTRY crPackBarrierCreateCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name, GLuint count);
void PACK_APIENTRY crPackBarrierDestroyCR(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackBarrierDestroyCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackBarrierExecCR(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackBarrierExecCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackBegin(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackBeginSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackBeginQueryARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id);
void PACK_APIENTRY crPackBeginQueryARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id);
void PACK_APIENTRY crPackBindAttribLocation(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, const char * name);
void PACK_APIENTRY crPackBindAttribLocationSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, const char * name);
void PACK_APIENTRY crPackBindBufferARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint buffer);
void PACK_APIENTRY crPackBindBufferARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint buffer);
void PACK_APIENTRY crPackBindFramebufferEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint framebuffer);
void PACK_APIENTRY crPackBindFramebufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint framebuffer);
void PACK_APIENTRY crPackBindProgramARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint program);
void PACK_APIENTRY crPackBindProgramARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint program);
void PACK_APIENTRY crPackBindProgramNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id);
void PACK_APIENTRY crPackBindProgramNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id);
void PACK_APIENTRY crPackBindRenderbufferEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint renderbuffer);
void PACK_APIENTRY crPackBindRenderbufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint renderbuffer);
void PACK_APIENTRY crPackBindTexture(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint texture);
void PACK_APIENTRY crPackBindTextureSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint texture);
void PACK_APIENTRY crPackBitmap(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackBitmapSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackBlendColorEXT(CR_PACKER_CONTEXT_ARGDECL GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void PACK_APIENTRY crPackBlendColorEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void PACK_APIENTRY crPackBlendEquationEXT(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackBlendEquationEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackBlendEquationSeparate(CR_PACKER_CONTEXT_ARGDECL GLenum modeRGB, GLenum modeAlpha);
void PACK_APIENTRY crPackBlendEquationSeparateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum modeRGB, GLenum modeAlpha);
void PACK_APIENTRY crPackBlendFunc(CR_PACKER_CONTEXT_ARGDECL GLenum sfactor, GLenum dfactor);
void PACK_APIENTRY crPackBlendFuncSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum sfactor, GLenum dfactor);
void PACK_APIENTRY crPackBlendFuncSeparateEXT(CR_PACKER_CONTEXT_ARGDECL GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
void PACK_APIENTRY crPackBlendFuncSeparateEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
void PACK_APIENTRY crPackBlitFramebufferEXT(CR_PACKER_CONTEXT_ARGDECL GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void PACK_APIENTRY crPackBlitFramebufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void PACK_APIENTRY crPackBoundsInfoCR(CR_PACKER_CONTEXT_ARGDECL const CRrecti * bounds, const GLbyte * payload, GLint len, GLint num_opcodes);
void PACK_APIENTRY crPackBoundsInfoCRSWAP(CR_PACKER_CONTEXT_ARGDECL const CRrecti * bounds, const GLbyte * payload, GLint len, GLint num_opcodes);
void PACK_APIENTRY crPackBufferDataARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
void PACK_APIENTRY crPackBufferDataARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
void PACK_APIENTRY crPackBufferSubDataARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
void PACK_APIENTRY crPackBufferSubDataARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
void PACK_APIENTRY crPackCallList(CR_PACKER_CONTEXT_ARGDECL GLuint list);
void PACK_APIENTRY crPackCallListSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint list);
void PACK_APIENTRY crPackCallLists(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLenum type, const GLvoid * lists);
void PACK_APIENTRY crPackCallListsSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLenum type, const GLvoid * lists);
void PACK_APIENTRY crPackCheckFramebufferStatusEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum* return_value, int * writeback);
void PACK_APIENTRY crPackCheckFramebufferStatusEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum* return_value, int * writeback);
void PACK_APIENTRY crPackChromiumParameterfCR(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat value);
void PACK_APIENTRY crPackChromiumParameterfCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat value);
void PACK_APIENTRY crPackChromiumParameteriCR(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint value);
void PACK_APIENTRY crPackChromiumParameteriCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint value);
void PACK_APIENTRY crPackChromiumParametervCR(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum type, GLsizei count, const GLvoid * values);
void PACK_APIENTRY crPackChromiumParametervCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum type, GLsizei count, const GLvoid * values);
void PACK_APIENTRY crPackClear(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackClearSWAP(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackClearAccum(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void PACK_APIENTRY crPackClearAccumSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void PACK_APIENTRY crPackClearColor(CR_PACKER_CONTEXT_ARGDECL GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void PACK_APIENTRY crPackClearColorSWAP(CR_PACKER_CONTEXT_ARGDECL GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void PACK_APIENTRY crPackClearDepth(CR_PACKER_CONTEXT_ARGDECL GLclampd depth);
void PACK_APIENTRY crPackClearDepthSWAP(CR_PACKER_CONTEXT_ARGDECL GLclampd depth);
void PACK_APIENTRY crPackClearIndex(CR_PACKER_CONTEXT_ARGDECL GLfloat c);
void PACK_APIENTRY crPackClearIndexSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat c);
void PACK_APIENTRY crPackClearStencil(CR_PACKER_CONTEXT_ARGDECL GLint s);
void PACK_APIENTRY crPackClearStencilSWAP(CR_PACKER_CONTEXT_ARGDECL GLint s);
void PACK_APIENTRY crPackClientActiveTextureARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture);
void PACK_APIENTRY crPackClientActiveTextureARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture);
void PACK_APIENTRY crPackClipPlane(CR_PACKER_CONTEXT_ARGDECL GLenum plane, const GLdouble * equation);
void PACK_APIENTRY crPackClipPlaneSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum plane, const GLdouble * equation);
void PACK_APIENTRY crPackColor3b(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue);
void PACK_APIENTRY crPackColor3bSWAP(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue);
void PACK_APIENTRY crPackColor3bv(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackColor3bvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackColor3d(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue);
void PACK_APIENTRY crPackColor3dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue);
void PACK_APIENTRY crPackColor3dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackColor3dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackColor3f(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue);
void PACK_APIENTRY crPackColor3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue);
void PACK_APIENTRY crPackColor3fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackColor3fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackColor3i(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue);
void PACK_APIENTRY crPackColor3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue);
void PACK_APIENTRY crPackColor3iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackColor3ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackColor3s(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue);
void PACK_APIENTRY crPackColor3sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue);
void PACK_APIENTRY crPackColor3sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackColor3svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackColor3ub(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue);
void PACK_APIENTRY crPackColor3ubSWAP(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue);
void PACK_APIENTRY crPackColor3ubv(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackColor3ubvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackColor3ui(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue);
void PACK_APIENTRY crPackColor3uiSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue);
void PACK_APIENTRY crPackColor3uiv(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackColor3uivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackColor3us(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue);
void PACK_APIENTRY crPackColor3usSWAP(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue);
void PACK_APIENTRY crPackColor3usv(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackColor3usvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackColor4b(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void PACK_APIENTRY crPackColor4bSWAP(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void PACK_APIENTRY crPackColor4bv(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackColor4bvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackColor4d(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void PACK_APIENTRY crPackColor4dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void PACK_APIENTRY crPackColor4dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackColor4dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackColor4f(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void PACK_APIENTRY crPackColor4fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void PACK_APIENTRY crPackColor4fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackColor4fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackColor4i(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue, GLint alpha);
void PACK_APIENTRY crPackColor4iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue, GLint alpha);
void PACK_APIENTRY crPackColor4iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackColor4ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackColor4s(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue, GLshort alpha);
void PACK_APIENTRY crPackColor4sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue, GLshort alpha);
void PACK_APIENTRY crPackColor4sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackColor4svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackColor4ub(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void PACK_APIENTRY crPackColor4ubSWAP(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void PACK_APIENTRY crPackColor4ubv(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackColor4ubvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackColor4ui(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue, GLuint alpha);
void PACK_APIENTRY crPackColor4uiSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue, GLuint alpha);
void PACK_APIENTRY crPackColor4uiv(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackColor4uivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackColor4us(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue, GLushort alpha);
void PACK_APIENTRY crPackColor4usSWAP(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue, GLushort alpha);
void PACK_APIENTRY crPackColor4usv(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackColor4usvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackColorMask(CR_PACKER_CONTEXT_ARGDECL GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void PACK_APIENTRY crPackColorMaskSWAP(CR_PACKER_CONTEXT_ARGDECL GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void PACK_APIENTRY crPackColorMaterial(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum mode);
void PACK_APIENTRY crPackColorMaterialSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum mode);
void PACK_APIENTRY crPackColorPointer(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackColorPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackCombinerInputNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void PACK_APIENTRY crPackCombinerInputNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void PACK_APIENTRY crPackCombinerOutputNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void PACK_APIENTRY crPackCombinerOutputNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void PACK_APIENTRY crPackCombinerParameterfNV(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackCombinerParameterfNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackCombinerParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackCombinerParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackCombinerParameteriNV(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackCombinerParameteriNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackCombinerParameterivNV(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackCombinerParameterivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackCombinerStageParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackCombinerStageParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackCompileShader(CR_PACKER_CONTEXT_ARGDECL GLuint shader);
void PACK_APIENTRY crPackCompileShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader);
void PACK_APIENTRY crPackCompressedTexImage1DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexImage1DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexImage2DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexImage2DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexImage3DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexImage3DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage1DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage1DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage2DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage2DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage3DARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCompressedTexSubImage3DARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imagesize, const GLvoid * data);
void PACK_APIENTRY crPackCopyPixels(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void PACK_APIENTRY crPackCopyPixelsSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void PACK_APIENTRY crPackCopyTexImage1D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void PACK_APIENTRY crPackCopyTexImage1DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void PACK_APIENTRY crPackCopyTexImage2D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void PACK_APIENTRY crPackCopyTexImage2DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void PACK_APIENTRY crPackCopyTexSubImage1D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void PACK_APIENTRY crPackCopyTexSubImage1DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void PACK_APIENTRY crPackCopyTexSubImage2D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackCopyTexSubImage2DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackCopyTexSubImage3D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackCopyTexSubImage3DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackCreateContext(CR_PACKER_CONTEXT_ARGDECL const char * dpyName, GLint visual, GLint shareCtx, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackCreateContextSWAP(CR_PACKER_CONTEXT_ARGDECL const char * dpyName, GLint visual, GLint shareCtx, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackCreateProgram(CR_PACKER_CONTEXT_ARGDECL GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackCreateProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackCreateShader(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackCreateShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackCullFace(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackCullFaceSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackDeleteBuffersARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * buffer);
void PACK_APIENTRY crPackDeleteBuffersARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * buffer);
void PACK_APIENTRY crPackDeleteFencesNV(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * fences);
void PACK_APIENTRY crPackDeleteFencesNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * fences);
void PACK_APIENTRY crPackDeleteFramebuffersEXT(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * framebuffers);
void PACK_APIENTRY crPackDeleteFramebuffersEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * framebuffers);
void PACK_APIENTRY crPackDeleteLists(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLsizei range);
void PACK_APIENTRY crPackDeleteListsSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLsizei range);
void PACK_APIENTRY crPackDeleteObjectARB(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj);
void PACK_APIENTRY crPackDeleteObjectARBSWAP(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj);
void PACK_APIENTRY crPackDeleteProgram(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackDeleteProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackDeleteProgramsARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * programs);
void PACK_APIENTRY crPackDeleteProgramsARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * programs);
void PACK_APIENTRY crPackDeleteQueriesARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids);
void PACK_APIENTRY crPackDeleteQueriesARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids);
void PACK_APIENTRY crPackDeleteRenderbuffersEXT(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * renderbuffers);
void PACK_APIENTRY crPackDeleteRenderbuffersEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * renderbuffers);
void PACK_APIENTRY crPackDeleteShader(CR_PACKER_CONTEXT_ARGDECL GLuint shader);
void PACK_APIENTRY crPackDeleteShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader);
void PACK_APIENTRY crPackDeleteTextures(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures);
void PACK_APIENTRY crPackDeleteTexturesSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures);
void PACK_APIENTRY crPackDepthFunc(CR_PACKER_CONTEXT_ARGDECL GLenum func);
void PACK_APIENTRY crPackDepthFuncSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum func);
void PACK_APIENTRY crPackDepthMask(CR_PACKER_CONTEXT_ARGDECL GLboolean flag);
void PACK_APIENTRY crPackDepthMaskSWAP(CR_PACKER_CONTEXT_ARGDECL GLboolean flag);
void PACK_APIENTRY crPackDepthRange(CR_PACKER_CONTEXT_ARGDECL GLclampd zNear, GLclampd zFar);
void PACK_APIENTRY crPackDepthRangeSWAP(CR_PACKER_CONTEXT_ARGDECL GLclampd zNear, GLclampd zFar);
void PACK_APIENTRY crPackDestroyContext(CR_PACKER_CONTEXT_ARGDECL GLint ctx);
void PACK_APIENTRY crPackDestroyContextSWAP(CR_PACKER_CONTEXT_ARGDECL GLint ctx);
void PACK_APIENTRY crPackDetachShader(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint shader);
void PACK_APIENTRY crPackDetachShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint shader);
void PACK_APIENTRY crPackDisable(CR_PACKER_CONTEXT_ARGDECL GLenum cap);
void PACK_APIENTRY crPackDisableSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum cap);
void PACK_APIENTRY crPackDisableClientState(CR_PACKER_CONTEXT_ARGDECL GLenum array);
void PACK_APIENTRY crPackDisableClientStateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum array);
void PACK_APIENTRY crPackDisableVertexAttribArrayARB(CR_PACKER_CONTEXT_ARGDECL GLuint index);
void PACK_APIENTRY crPackDisableVertexAttribArrayARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index);
void PACK_APIENTRY crPackDrawArrays(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint first, GLsizei count);
void PACK_APIENTRY crPackDrawArraysSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint first, GLsizei count);
void PACK_APIENTRY crPackDrawBuffer(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackDrawBufferSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackDrawBuffers(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLenum* bufs);
void PACK_APIENTRY crPackDrawBuffersSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLenum* bufs);
void PACK_APIENTRY crPackDrawElements(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLsizei count, GLenum type, const GLvoid * indices);
void PACK_APIENTRY crPackDrawElementsSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLsizei count, GLenum type, const GLvoid * indices);
void PACK_APIENTRY crPackDrawPixels(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackDrawPixelsSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackDrawRangeElements(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);
void PACK_APIENTRY crPackDrawRangeElementsSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);
void PACK_APIENTRY crPackEdgeFlag(CR_PACKER_CONTEXT_ARGDECL GLboolean flag);
void PACK_APIENTRY crPackEdgeFlagSWAP(CR_PACKER_CONTEXT_ARGDECL GLboolean flag);
void PACK_APIENTRY crPackEdgeFlagPointer(CR_PACKER_CONTEXT_ARGDECL GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackEdgeFlagPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackEdgeFlagv(CR_PACKER_CONTEXT_ARGDECL const GLboolean * flag);
void PACK_APIENTRY crPackEdgeFlagvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLboolean * flag);
void PACK_APIENTRY crPackEnable(CR_PACKER_CONTEXT_ARGDECL GLenum cap);
void PACK_APIENTRY crPackEnableSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum cap);
void PACK_APIENTRY crPackEnableClientState(CR_PACKER_CONTEXT_ARGDECL GLenum array);
void PACK_APIENTRY crPackEnableClientStateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum array);
void PACK_APIENTRY crPackEnableVertexAttribArrayARB(CR_PACKER_CONTEXT_ARGDECL GLuint index);
void PACK_APIENTRY crPackEnableVertexAttribArrayARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index);
void PACK_APIENTRY crPackEnd(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackEndSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackEndList(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackEndListSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackEndQueryARB(CR_PACKER_CONTEXT_ARGDECL GLenum target);
void PACK_APIENTRY crPackEndQueryARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target);
void PACK_APIENTRY crPackEvalCoord1d(CR_PACKER_CONTEXT_ARGDECL GLdouble u);
void PACK_APIENTRY crPackEvalCoord1dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble u);
void PACK_APIENTRY crPackEvalCoord1dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * u);
void PACK_APIENTRY crPackEvalCoord1dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * u);
void PACK_APIENTRY crPackEvalCoord1f(CR_PACKER_CONTEXT_ARGDECL GLfloat u);
void PACK_APIENTRY crPackEvalCoord1fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat u);
void PACK_APIENTRY crPackEvalCoord1fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * u);
void PACK_APIENTRY crPackEvalCoord1fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * u);
void PACK_APIENTRY crPackEvalCoord2d(CR_PACKER_CONTEXT_ARGDECL GLdouble u, GLdouble v);
void PACK_APIENTRY crPackEvalCoord2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble u, GLdouble v);
void PACK_APIENTRY crPackEvalCoord2dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * u);
void PACK_APIENTRY crPackEvalCoord2dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * u);
void PACK_APIENTRY crPackEvalCoord2f(CR_PACKER_CONTEXT_ARGDECL GLfloat u, GLfloat v);
void PACK_APIENTRY crPackEvalCoord2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat u, GLfloat v);
void PACK_APIENTRY crPackEvalCoord2fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * u);
void PACK_APIENTRY crPackEvalCoord2fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * u);
void PACK_APIENTRY crPackEvalMesh1(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint i1, GLint i2);
void PACK_APIENTRY crPackEvalMesh1SWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint i1, GLint i2);
void PACK_APIENTRY crPackEvalMesh2(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void PACK_APIENTRY crPackEvalMesh2SWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void PACK_APIENTRY crPackEvalPoint1(CR_PACKER_CONTEXT_ARGDECL GLint i);
void PACK_APIENTRY crPackEvalPoint1SWAP(CR_PACKER_CONTEXT_ARGDECL GLint i);
void PACK_APIENTRY crPackEvalPoint2(CR_PACKER_CONTEXT_ARGDECL GLint i, GLint j);
void PACK_APIENTRY crPackEvalPoint2SWAP(CR_PACKER_CONTEXT_ARGDECL GLint i, GLint j);
void PACK_APIENTRY crPackExecuteProgramNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id, const GLfloat * params);
void PACK_APIENTRY crPackExecuteProgramNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id, const GLfloat * params);
void PACK_APIENTRY crPackFeedbackBuffer(CR_PACKER_CONTEXT_ARGDECL GLsizei size, GLenum type, GLfloat * buffer);
void PACK_APIENTRY crPackFeedbackBufferSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei size, GLenum type, GLfloat * buffer);
void PACK_APIENTRY crPackFinalCombinerInputNV(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void PACK_APIENTRY crPackFinalCombinerInputNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void PACK_APIENTRY crPackFinish(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFinishSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFinishFenceNV(CR_PACKER_CONTEXT_ARGDECL GLuint fence);
void PACK_APIENTRY crPackFinishFenceNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint fence);
void PACK_APIENTRY crPackFlush(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFlushSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFlushVertexArrayRangeNV(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFlushVertexArrayRangeNVSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackFogCoordPointerEXT(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackFogCoordPointerEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackFogCoorddEXT(CR_PACKER_CONTEXT_ARGDECL GLdouble coord);
void PACK_APIENTRY crPackFogCoorddEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble coord);
void PACK_APIENTRY crPackFogCoorddvEXT(CR_PACKER_CONTEXT_ARGDECL const GLdouble * coord);
void PACK_APIENTRY crPackFogCoorddvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * coord);
void PACK_APIENTRY crPackFogCoordfEXT(CR_PACKER_CONTEXT_ARGDECL GLfloat coord);
void PACK_APIENTRY crPackFogCoordfEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat coord);
void PACK_APIENTRY crPackFogCoordfvEXT(CR_PACKER_CONTEXT_ARGDECL const GLfloat * coord);
void PACK_APIENTRY crPackFogCoordfvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * coord);
void PACK_APIENTRY crPackFogf(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackFogfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackFogfv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackFogfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackFogi(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackFogiSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackFogiv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackFogivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackFramebufferRenderbufferEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void PACK_APIENTRY crPackFramebufferRenderbufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void PACK_APIENTRY crPackFramebufferTexture1DEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void PACK_APIENTRY crPackFramebufferTexture1DEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void PACK_APIENTRY crPackFramebufferTexture2DEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void PACK_APIENTRY crPackFramebufferTexture2DEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void PACK_APIENTRY crPackFramebufferTexture3DEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void PACK_APIENTRY crPackFramebufferTexture3DEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void PACK_APIENTRY crPackFrontFace(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackFrontFaceSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackFrustum(CR_PACKER_CONTEXT_ARGDECL GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void PACK_APIENTRY crPackFrustumSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void PACK_APIENTRY crPackGenBuffersARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * buffer, int * writeback);
void PACK_APIENTRY crPackGenBuffersARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * buffer, int * writeback);
void PACK_APIENTRY crPackGenFencesNV(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * fences, int * writeback);
void PACK_APIENTRY crPackGenFencesNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * fences, int * writeback);
void PACK_APIENTRY crPackGenFramebuffersEXT(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * framebuffers, int * writeback);
void PACK_APIENTRY crPackGenFramebuffersEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * framebuffers, int * writeback);
void PACK_APIENTRY crPackGenLists(CR_PACKER_CONTEXT_ARGDECL GLsizei range, GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackGenListsSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei range, GLuint* return_value, int * writeback);
void PACK_APIENTRY crPackGenProgramsARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * programs, int * writeback);
void PACK_APIENTRY crPackGenProgramsARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * programs, int * writeback);
void PACK_APIENTRY crPackGenProgramsNV(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * ids, int * writeback);
void PACK_APIENTRY crPackGenProgramsNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * ids, int * writeback);
void PACK_APIENTRY crPackGenQueriesARB(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * ids, int * writeback);
void PACK_APIENTRY crPackGenQueriesARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * ids, int * writeback);
void PACK_APIENTRY crPackGenRenderbuffersEXT(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * renderbuffers, int * writeback);
void PACK_APIENTRY crPackGenRenderbuffersEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * renderbuffers, int * writeback);
void PACK_APIENTRY crPackGenTextures(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * textures, int * writeback);
void PACK_APIENTRY crPackGenTexturesSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, GLuint * textures, int * writeback);
void PACK_APIENTRY crPackGenerateMipmapEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target);
void PACK_APIENTRY crPackGenerateMipmapEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target);
void PACK_APIENTRY crPackGetActiveAttrib(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name, int * writeback);
void PACK_APIENTRY crPackGetActiveAttribSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name, int * writeback);
void PACK_APIENTRY crPackGetActiveUniform(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name, int * writeback);
void PACK_APIENTRY crPackGetActiveUniformSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name, int * writeback);
void PACK_APIENTRY crPackGetAttachedObjectsARB(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB containerObj, GLsizei maxCount, GLsizei * count, VBoxGLhandleARB * obj, int * writeback);
void PACK_APIENTRY crPackGetAttachedObjectsARBSWAP(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB containerObj, GLsizei maxCount, GLsizei * count, VBoxGLhandleARB * obj, int * writeback);
void PACK_APIENTRY crPackGetAttachedShaders(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders, int * writeback);
void PACK_APIENTRY crPackGetAttachedShadersSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders, int * writeback);
void PACK_APIENTRY crPackGetAttribLocation(CR_PACKER_CONTEXT_ARGDECL GLuint program, const char * name, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackGetAttribLocationSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, const char * name, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackGetAttribsLocations(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxcbData, GLsizei * cbData, GLvoid * pData, int * writeback);
void PACK_APIENTRY crPackGetAttribsLocationsSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxcbData, GLsizei * cbData, GLvoid * pData, int * writeback);
void PACK_APIENTRY crPackGetBooleanv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLboolean * params, int * writeback);
void PACK_APIENTRY crPackGetBooleanvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLboolean * params, int * writeback);
void PACK_APIENTRY crPackGetBufferParameterivARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetBufferParameterivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetBufferSubDataARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data, int * writeback);
void PACK_APIENTRY crPackGetBufferSubDataARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data, int * writeback);
void PACK_APIENTRY crPackGetChromiumParametervCR(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum type, GLsizei count, GLvoid * values, int * writeback);
void PACK_APIENTRY crPackGetChromiumParametervCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum type, GLsizei count, GLvoid * values, int * writeback);
void PACK_APIENTRY crPackGetClipPlane(CR_PACKER_CONTEXT_ARGDECL GLenum plane, GLdouble * equation, int * writeback);
void PACK_APIENTRY crPackGetClipPlaneSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum plane, GLdouble * equation, int * writeback);
void PACK_APIENTRY crPackGetCombinerInputParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerInputParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerInputParameterivNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerInputParameterivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerOutputParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerOutputParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerOutputParameterivNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerOutputParameterivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum portion, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerStageParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCombinerStageParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum stage, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetCompressedTexImageARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLvoid * img, int * writeback);
void PACK_APIENTRY crPackGetCompressedTexImageARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLvoid * img, int * writeback);
void PACK_APIENTRY crPackGetDoublev(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetDoublevSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetError(CR_PACKER_CONTEXT_ARGDECL GLenum* return_value, int * writeback);
void PACK_APIENTRY crPackGetErrorSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum* return_value, int * writeback);
void PACK_APIENTRY crPackGetFenceivNV(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetFenceivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetFinalCombinerInputParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetFinalCombinerInputParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetFinalCombinerInputParameterivNV(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetFinalCombinerInputParameterivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum variable, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetFloatv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetFloatvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetFramebufferAttachmentParameterivEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetFramebufferAttachmentParameterivEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum attachment, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetHandleARB(CR_PACKER_CONTEXT_ARGDECL GLenum pname, VBoxGLhandleARB* return_value, int * writeback);
void PACK_APIENTRY crPackGetHandleARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, VBoxGLhandleARB* return_value, int * writeback);
void PACK_APIENTRY crPackGetInfoLogARB(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog, int * writeback);
void PACK_APIENTRY crPackGetInfoLogARBSWAP(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog, int * writeback);
void PACK_APIENTRY crPackGetIntegerv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetIntegervSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetLightfv(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetLightfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetLightiv(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetLightivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetMapdv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLdouble * v, int * writeback);
void PACK_APIENTRY crPackGetMapdvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLdouble * v, int * writeback);
void PACK_APIENTRY crPackGetMapfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLfloat * v, int * writeback);
void PACK_APIENTRY crPackGetMapfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLfloat * v, int * writeback);
void PACK_APIENTRY crPackGetMapiv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLint * v, int * writeback);
void PACK_APIENTRY crPackGetMapivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum query, GLint * v, int * writeback);
void PACK_APIENTRY crPackGetMaterialfv(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetMaterialfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetMaterialiv(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetMaterialivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetObjectParameterfvARB(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetObjectParameterfvARBSWAP(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetObjectParameterivARB(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetObjectParameterivARBSWAP(CR_PACKER_CONTEXT_ARGDECL VBoxGLhandleARB obj, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetPixelMapfv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLfloat * values, int * writeback);
void PACK_APIENTRY crPackGetPixelMapfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLfloat * values, int * writeback);
void PACK_APIENTRY crPackGetPixelMapuiv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLuint * values, int * writeback);
void PACK_APIENTRY crPackGetPixelMapuivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLuint * values, int * writeback);
void PACK_APIENTRY crPackGetPixelMapusv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLushort * values, int * writeback);
void PACK_APIENTRY crPackGetPixelMapusvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLushort * values, int * writeback);
void PACK_APIENTRY crPackGetPointerv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLvoid ** params, int * writeback);
void PACK_APIENTRY crPackGetPointervSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLvoid ** params, int * writeback);
void PACK_APIENTRY crPackGetPolygonStipple(CR_PACKER_CONTEXT_ARGDECL GLubyte * mask, int * writeback);
void PACK_APIENTRY crPackGetPolygonStippleSWAP(CR_PACKER_CONTEXT_ARGDECL GLubyte * mask, int * writeback);
void PACK_APIENTRY crPackGetProgramEnvParameterdvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramEnvParameterdvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramEnvParameterfvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramEnvParameterfvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramInfoLog(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei bufSize, GLsizei * length, char * infoLog, int * writeback);
void PACK_APIENTRY crPackGetProgramInfoLogSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei bufSize, GLsizei * length, char * infoLog, int * writeback);
void PACK_APIENTRY crPackGetProgramLocalParameterdvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramLocalParameterdvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramLocalParameterfvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramLocalParameterfvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramNamedParameterdvNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramNamedParameterdvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramNamedParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramNamedParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramParameterdvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramParameterdvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetProgramParameterfvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramParameterfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetProgramStringARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLvoid * string, int * writeback);
void PACK_APIENTRY crPackGetProgramStringARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLvoid * string, int * writeback);
void PACK_APIENTRY crPackGetProgramStringNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLubyte * program, int * writeback);
void PACK_APIENTRY crPackGetProgramStringNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLubyte * program, int * writeback);
void PACK_APIENTRY crPackGetProgramiv(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetProgramivSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetProgramivARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetProgramivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetProgramivNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetProgramivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryObjectivARB(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryObjectivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryObjectuivARB(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLuint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryObjectuivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLenum pname, GLuint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryivARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetQueryivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetRenderbufferParameterivEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetRenderbufferParameterivEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetShaderInfoLog(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei bufSize, GLsizei * length, char * infoLog, int * writeback);
void PACK_APIENTRY crPackGetShaderInfoLogSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei bufSize, GLsizei * length, char * infoLog, int * writeback);
void PACK_APIENTRY crPackGetShaderSource(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei bufSize, GLsizei * length, char * source, int * writeback);
void PACK_APIENTRY crPackGetShaderSourceSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei bufSize, GLsizei * length, char * source, int * writeback);
void PACK_APIENTRY crPackGetShaderiv(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetShaderivSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetString(CR_PACKER_CONTEXT_ARGDECL GLenum name, const GLubyte * return_value, int * writeback);
void PACK_APIENTRY crPackGetStringSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum name, const GLubyte * return_value, int * writeback);
void PACK_APIENTRY crPackGetTexEnvfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexEnvfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexEnviv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexEnvivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexGendv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetTexGendvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetTexGenfv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexGenfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexGeniv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexGenivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexImage(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels, const CRPixelPackState * packstate, int * writeback);
void PACK_APIENTRY crPackGetTexImageSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels, const CRPixelPackState * packstate, int * writeback);
void PACK_APIENTRY crPackGetTexLevelParameterfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexLevelParameterfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexLevelParameteriv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexLevelParameterivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexParameterfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexParameterfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetTexParameteriv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTexParameterivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTrackMatrixivNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint address, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetTrackMatrixivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint address, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetUniformLocation(CR_PACKER_CONTEXT_ARGDECL GLuint program, const char * name, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackGetUniformLocationSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, const char * name, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackGetUniformfv(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLint location, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetUniformfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLint location, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetUniformiv(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLint location, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetUniformivSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLint location, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetUniformsLocations(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxcbData, GLsizei * cbData, GLvoid * pData, int * writeback);
void PACK_APIENTRY crPackGetUniformsLocationsSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLsizei maxcbData, GLsizei * cbData, GLvoid * pData, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribPointervARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLvoid ** pointer, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribPointervARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLvoid ** pointer, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribPointervNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLvoid ** pointer, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribPointervNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLvoid ** pointer, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribdvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribdvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribdvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribdvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLdouble * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribfvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribfvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribfvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribfvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLfloat * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribivARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribivNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackGetVertexAttribivNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLenum pname, GLint * params, int * writeback);
void PACK_APIENTRY crPackHint(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum mode);
void PACK_APIENTRY crPackHintSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum mode);
void PACK_APIENTRY crPackIndexMask(CR_PACKER_CONTEXT_ARGDECL GLuint mask);
void PACK_APIENTRY crPackIndexMaskSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint mask);
void PACK_APIENTRY crPackIndexPointer(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackIndexPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackIndexd(CR_PACKER_CONTEXT_ARGDECL GLdouble c);
void PACK_APIENTRY crPackIndexdSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble c);
void PACK_APIENTRY crPackIndexdv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * c);
void PACK_APIENTRY crPackIndexdvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * c);
void PACK_APIENTRY crPackIndexf(CR_PACKER_CONTEXT_ARGDECL GLfloat c);
void PACK_APIENTRY crPackIndexfSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat c);
void PACK_APIENTRY crPackIndexfv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * c);
void PACK_APIENTRY crPackIndexfvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * c);
void PACK_APIENTRY crPackIndexi(CR_PACKER_CONTEXT_ARGDECL GLint c);
void PACK_APIENTRY crPackIndexiSWAP(CR_PACKER_CONTEXT_ARGDECL GLint c);
void PACK_APIENTRY crPackIndexiv(CR_PACKER_CONTEXT_ARGDECL const GLint * c);
void PACK_APIENTRY crPackIndexivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * c);
void PACK_APIENTRY crPackIndexs(CR_PACKER_CONTEXT_ARGDECL GLshort c);
void PACK_APIENTRY crPackIndexsSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort c);
void PACK_APIENTRY crPackIndexsv(CR_PACKER_CONTEXT_ARGDECL const GLshort * c);
void PACK_APIENTRY crPackIndexsvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * c);
void PACK_APIENTRY crPackIndexub(CR_PACKER_CONTEXT_ARGDECL GLubyte c);
void PACK_APIENTRY crPackIndexubSWAP(CR_PACKER_CONTEXT_ARGDECL GLubyte c);
void PACK_APIENTRY crPackIndexubv(CR_PACKER_CONTEXT_ARGDECL const GLubyte * c);
void PACK_APIENTRY crPackIndexubvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLubyte * c);
void PACK_APIENTRY crPackInitNames(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackInitNamesSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackInterleavedArrays(CR_PACKER_CONTEXT_ARGDECL GLenum format, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackInterleavedArraysSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum format, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackIsBufferARB(CR_PACKER_CONTEXT_ARGDECL GLuint buffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsBufferARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint buffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsEnabled(CR_PACKER_CONTEXT_ARGDECL GLenum cap, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsEnabledSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum cap, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsFenceNV(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsFenceNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsFramebufferEXT(CR_PACKER_CONTEXT_ARGDECL GLuint framebuffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsFramebufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint framebuffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsList(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsListSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsProgram(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsProgramARB(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsProgramARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsQueryARB(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsQueryARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsRenderbufferEXT(CR_PACKER_CONTEXT_ARGDECL GLuint renderbuffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsRenderbufferEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint renderbuffer, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsShader(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsShaderSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsTexture(CR_PACKER_CONTEXT_ARGDECL GLuint texture, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackIsTextureSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint texture, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackLightModelf(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackLightModelfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackLightModelfv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackLightModelfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackLightModeli(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackLightModeliSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackLightModeliv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackLightModelivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * params);
void PACK_APIENTRY crPackLightf(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackLightfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackLightfv(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackLightfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackLighti(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLint param);
void PACK_APIENTRY crPackLightiSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, GLint param);
void PACK_APIENTRY crPackLightiv(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackLightivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum light, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackLineStipple(CR_PACKER_CONTEXT_ARGDECL GLint factor, GLushort pattern);
void PACK_APIENTRY crPackLineStippleSWAP(CR_PACKER_CONTEXT_ARGDECL GLint factor, GLushort pattern);
void PACK_APIENTRY crPackLineWidth(CR_PACKER_CONTEXT_ARGDECL GLfloat width);
void PACK_APIENTRY crPackLineWidthSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat width);
void PACK_APIENTRY crPackLinkProgram(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackLinkProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackListBase(CR_PACKER_CONTEXT_ARGDECL GLuint base);
void PACK_APIENTRY crPackListBaseSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint base);
void PACK_APIENTRY crPackLoadIdentity(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackLoadIdentitySWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackLoadMatrixd(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackLoadMatrixdSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackLoadMatrixf(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackLoadMatrixfSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackLoadName(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackLoadNameSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackLoadProgramNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id, GLsizei len, const GLubyte * program);
void PACK_APIENTRY crPackLoadProgramNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint id, GLsizei len, const GLubyte * program);
void PACK_APIENTRY crPackLoadTransposeMatrixdARB(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackLoadTransposeMatrixdARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackLoadTransposeMatrixfARB(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackLoadTransposeMatrixfARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackLockArraysEXT(CR_PACKER_CONTEXT_ARGDECL GLint first, GLint count);
void PACK_APIENTRY crPackLockArraysEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLint first, GLint count);
void PACK_APIENTRY crPackLogicOp(CR_PACKER_CONTEXT_ARGDECL GLenum opcode);
void PACK_APIENTRY crPackLogicOpSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum opcode);
void PACK_APIENTRY crPackMakeCurrent(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint nativeWindow, GLint ctx);
void PACK_APIENTRY crPackMakeCurrentSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint nativeWindow, GLint ctx);
void PACK_APIENTRY crPackMap1d(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
void PACK_APIENTRY crPackMap1dSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
void PACK_APIENTRY crPackMap1f(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
void PACK_APIENTRY crPackMap1fSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
void PACK_APIENTRY crPackMap2d(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
void PACK_APIENTRY crPackMap2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
void PACK_APIENTRY crPackMap2f(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
void PACK_APIENTRY crPackMap2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
void PACK_APIENTRY crPackMapBufferARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum access, void * return_value, int * writeback);
void PACK_APIENTRY crPackMapBufferARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum access, void * return_value, int * writeback);
void PACK_APIENTRY crPackMapGrid1d(CR_PACKER_CONTEXT_ARGDECL GLint un, GLdouble u1, GLdouble u2);
void PACK_APIENTRY crPackMapGrid1dSWAP(CR_PACKER_CONTEXT_ARGDECL GLint un, GLdouble u1, GLdouble u2);
void PACK_APIENTRY crPackMapGrid1f(CR_PACKER_CONTEXT_ARGDECL GLint un, GLfloat u1, GLfloat u2);
void PACK_APIENTRY crPackMapGrid1fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint un, GLfloat u1, GLfloat u2);
void PACK_APIENTRY crPackMapGrid2d(CR_PACKER_CONTEXT_ARGDECL GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void PACK_APIENTRY crPackMapGrid2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void PACK_APIENTRY crPackMapGrid2f(CR_PACKER_CONTEXT_ARGDECL GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void PACK_APIENTRY crPackMapGrid2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void PACK_APIENTRY crPackMaterialf(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackMaterialfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackMaterialfv(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackMaterialfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackMateriali(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLint param);
void PACK_APIENTRY crPackMaterialiSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, GLint param);
void PACK_APIENTRY crPackMaterialiv(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackMaterialivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackMatrixMode(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackMatrixModeSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackMultMatrixd(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackMultMatrixdSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackMultMatrixf(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackMultMatrixfSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackMultTransposeMatrixdARB(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackMultTransposeMatrixdARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * m);
void PACK_APIENTRY crPackMultTransposeMatrixfARB(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackMultTransposeMatrixfARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * m);
void PACK_APIENTRY crPackMultiDrawArraysEXT(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);
void PACK_APIENTRY crPackMultiDrawArraysEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);
void PACK_APIENTRY crPackMultiDrawElementsEXT(CR_PACKER_CONTEXT_ARGDECL GLenum mode, const GLsizei * count, GLenum type, const GLvoid ** indices, GLsizei primcount);
void PACK_APIENTRY crPackMultiDrawElementsEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, const GLsizei * count, GLenum type, const GLvoid ** indices, GLsizei primcount);
void PACK_APIENTRY crPackMultiTexCoord1dARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s);
void PACK_APIENTRY crPackMultiTexCoord1dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s);
void PACK_APIENTRY crPackMultiTexCoord1dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord1dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord1fARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s);
void PACK_APIENTRY crPackMultiTexCoord1fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s);
void PACK_APIENTRY crPackMultiTexCoord1fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord1fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord1iARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s);
void PACK_APIENTRY crPackMultiTexCoord1iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s);
void PACK_APIENTRY crPackMultiTexCoord1ivARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord1ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord1sARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s);
void PACK_APIENTRY crPackMultiTexCoord1sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s);
void PACK_APIENTRY crPackMultiTexCoord1svARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord1svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord2dARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t);
void PACK_APIENTRY crPackMultiTexCoord2dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t);
void PACK_APIENTRY crPackMultiTexCoord2dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord2dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord2fARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t);
void PACK_APIENTRY crPackMultiTexCoord2fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t);
void PACK_APIENTRY crPackMultiTexCoord2fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord2fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord2iARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t);
void PACK_APIENTRY crPackMultiTexCoord2iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t);
void PACK_APIENTRY crPackMultiTexCoord2ivARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord2ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord2sARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t);
void PACK_APIENTRY crPackMultiTexCoord2sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t);
void PACK_APIENTRY crPackMultiTexCoord2svARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord2svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord3dARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t, GLdouble r);
void PACK_APIENTRY crPackMultiTexCoord3dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t, GLdouble r);
void PACK_APIENTRY crPackMultiTexCoord3dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord3dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord3fARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t, GLfloat r);
void PACK_APIENTRY crPackMultiTexCoord3fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t, GLfloat r);
void PACK_APIENTRY crPackMultiTexCoord3fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord3fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord3iARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t, GLint r);
void PACK_APIENTRY crPackMultiTexCoord3iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t, GLint r);
void PACK_APIENTRY crPackMultiTexCoord3ivARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord3ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord3sARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t, GLshort r);
void PACK_APIENTRY crPackMultiTexCoord3sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t, GLshort r);
void PACK_APIENTRY crPackMultiTexCoord3svARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord3svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord4dARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void PACK_APIENTRY crPackMultiTexCoord4dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void PACK_APIENTRY crPackMultiTexCoord4dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord4dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLdouble * t);
void PACK_APIENTRY crPackMultiTexCoord4fARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void PACK_APIENTRY crPackMultiTexCoord4fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void PACK_APIENTRY crPackMultiTexCoord4fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord4fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLfloat * t);
void PACK_APIENTRY crPackMultiTexCoord4iARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t, GLint r, GLint q);
void PACK_APIENTRY crPackMultiTexCoord4iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLint s, GLint t, GLint r, GLint q);
void PACK_APIENTRY crPackMultiTexCoord4ivARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord4ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLint * t);
void PACK_APIENTRY crPackMultiTexCoord4sARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t, GLshort r, GLshort q);
void PACK_APIENTRY crPackMultiTexCoord4sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, GLshort s, GLshort t, GLshort r, GLshort q);
void PACK_APIENTRY crPackMultiTexCoord4svARB(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackMultiTexCoord4svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum texture, const GLshort * t);
void PACK_APIENTRY crPackNewList(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLenum mode);
void PACK_APIENTRY crPackNewListSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint list, GLenum mode);
void PACK_APIENTRY crPackNormal3b(CR_PACKER_CONTEXT_ARGDECL GLbyte nx, GLbyte ny, GLbyte nz);
void PACK_APIENTRY crPackNormal3bSWAP(CR_PACKER_CONTEXT_ARGDECL GLbyte nx, GLbyte ny, GLbyte nz);
void PACK_APIENTRY crPackNormal3bv(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackNormal3bvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackNormal3d(CR_PACKER_CONTEXT_ARGDECL GLdouble nx, GLdouble ny, GLdouble nz);
void PACK_APIENTRY crPackNormal3dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble nx, GLdouble ny, GLdouble nz);
void PACK_APIENTRY crPackNormal3dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackNormal3dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackNormal3f(CR_PACKER_CONTEXT_ARGDECL GLfloat nx, GLfloat ny, GLfloat nz);
void PACK_APIENTRY crPackNormal3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat nx, GLfloat ny, GLfloat nz);
void PACK_APIENTRY crPackNormal3fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackNormal3fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackNormal3i(CR_PACKER_CONTEXT_ARGDECL GLint nx, GLint ny, GLint nz);
void PACK_APIENTRY crPackNormal3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint nx, GLint ny, GLint nz);
void PACK_APIENTRY crPackNormal3iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackNormal3ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackNormal3s(CR_PACKER_CONTEXT_ARGDECL GLshort nx, GLshort ny, GLshort nz);
void PACK_APIENTRY crPackNormal3sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort nx, GLshort ny, GLshort nz);
void PACK_APIENTRY crPackNormal3sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackNormal3svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackNormalPointer(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackNormalPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackOrtho(CR_PACKER_CONTEXT_ARGDECL GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void PACK_APIENTRY crPackOrthoSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void PACK_APIENTRY crPackPassThrough(CR_PACKER_CONTEXT_ARGDECL GLfloat token);
void PACK_APIENTRY crPackPassThroughSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat token);
void PACK_APIENTRY crPackPixelMapfv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLfloat * values);
void PACK_APIENTRY crPackPixelMapfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLfloat * values);
void PACK_APIENTRY crPackPixelMapuiv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLuint * values);
void PACK_APIENTRY crPackPixelMapuivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLuint * values);
void PACK_APIENTRY crPackPixelMapusv(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLushort * values);
void PACK_APIENTRY crPackPixelMapusvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum map, GLsizei mapsize, const GLushort * values);
void PACK_APIENTRY crPackPixelStoref(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPixelStorefSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPixelStorei(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPixelStoreiSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPixelTransferf(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPixelTransferfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPixelTransferi(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPixelTransferiSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPixelZoom(CR_PACKER_CONTEXT_ARGDECL GLfloat xfactor, GLfloat yfactor);
void PACK_APIENTRY crPackPixelZoomSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat xfactor, GLfloat yfactor);
void PACK_APIENTRY crPackPointParameterfARB(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPointParameterfARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLfloat param);
void PACK_APIENTRY crPackPointParameterfvARB(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackPointParameterfvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackPointParameteri(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPointParameteriSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, GLint param);
void PACK_APIENTRY crPackPointParameteriv(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * param);
void PACK_APIENTRY crPackPointParameterivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum pname, const GLint * param);
void PACK_APIENTRY crPackPointSize(CR_PACKER_CONTEXT_ARGDECL GLfloat size);
void PACK_APIENTRY crPackPointSizeSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat size);
void PACK_APIENTRY crPackPolygonMode(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum mode);
void PACK_APIENTRY crPackPolygonModeSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum mode);
void PACK_APIENTRY crPackPolygonOffset(CR_PACKER_CONTEXT_ARGDECL GLfloat factor, GLfloat units);
void PACK_APIENTRY crPackPolygonOffsetSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat factor, GLfloat units);
void PACK_APIENTRY crPackPolygonStipple(CR_PACKER_CONTEXT_ARGDECL const GLubyte * mask);
void PACK_APIENTRY crPackPolygonStippleSWAP(CR_PACKER_CONTEXT_ARGDECL const GLubyte * mask);
void PACK_APIENTRY crPackPopAttrib(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopAttribSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopClientAttrib(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopClientAttribSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopMatrix(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopMatrixSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopName(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPopNameSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPrioritizeTextures(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures, const GLclampf * priorities);
void PACK_APIENTRY crPackPrioritizeTexturesSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * textures, const GLclampf * priorities);
void PACK_APIENTRY crPackProgramEnvParameter4dARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramEnvParameter4dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramEnvParameter4dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramEnvParameter4dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramEnvParameter4fARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramEnvParameter4fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramEnvParameter4fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramEnvParameter4fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramLocalParameter4dARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramLocalParameter4dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramLocalParameter4dvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramLocalParameter4dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramLocalParameter4fARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramLocalParameter4fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramLocalParameter4fvARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramLocalParameter4fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramNamedParameter4dNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramNamedParameter4dNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramNamedParameter4dvNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
void PACK_APIENTRY crPackProgramNamedParameter4dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
void PACK_APIENTRY crPackProgramNamedParameter4fNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramNamedParameter4fNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramNamedParameter4fvNV(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
void PACK_APIENTRY crPackProgramNamedParameter4fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
void PACK_APIENTRY crPackProgramParameter4dNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramParameter4dNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackProgramParameter4dvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramParameter4dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLdouble * params);
void PACK_APIENTRY crPackProgramParameter4fNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramParameter4fNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackProgramParameter4fvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramParameter4fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, const GLfloat * params);
void PACK_APIENTRY crPackProgramParameters4dvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLuint num, const GLdouble * params);
void PACK_APIENTRY crPackProgramParameters4dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLuint num, const GLdouble * params);
void PACK_APIENTRY crPackProgramParameters4fvNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLuint num, const GLfloat * params);
void PACK_APIENTRY crPackProgramParameters4fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint index, GLuint num, const GLfloat * params);
void PACK_APIENTRY crPackProgramStringARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum format, GLsizei len, const GLvoid * string);
void PACK_APIENTRY crPackProgramStringARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum format, GLsizei len, const GLvoid * string);
void PACK_APIENTRY crPackPushAttrib(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackPushAttribSWAP(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackPushClientAttrib(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackPushClientAttribSWAP(CR_PACKER_CONTEXT_ARGDECL GLbitfield mask);
void PACK_APIENTRY crPackPushMatrix(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPushMatrixSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackPushName(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackPushNameSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackRasterPos2d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackRasterPos2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackRasterPos2dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos2dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos2f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackRasterPos2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackRasterPos2fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos2fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos2i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackRasterPos2iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackRasterPos2iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos2ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos2s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackRasterPos2sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackRasterPos2sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackRasterPos2svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackRasterPos3d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackRasterPos3dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackRasterPos3dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos3dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos3f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackRasterPos3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackRasterPos3fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos3fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos3i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackRasterPos3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackRasterPos3iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos3ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos3s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackRasterPos3sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackRasterPos3sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackRasterPos3svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackRasterPos4d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackRasterPos4dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackRasterPos4dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos4dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackRasterPos4f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackRasterPos4fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackRasterPos4fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos4fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackRasterPos4i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackRasterPos4iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackRasterPos4iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos4ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackRasterPos4s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackRasterPos4sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackRasterPos4sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackRasterPos4svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackReadBuffer(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackReadBufferSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackReadPixels(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels, const CRPixelPackState * packstate, int * writeback);
void PACK_APIENTRY crPackReadPixelsSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels, const CRPixelPackState * packstate, int * writeback);
void PACK_APIENTRY crPackRectd(CR_PACKER_CONTEXT_ARGDECL GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void PACK_APIENTRY crPackRectdSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void PACK_APIENTRY crPackRectdv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v1, const GLdouble * v2);
void PACK_APIENTRY crPackRectdvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v1, const GLdouble * v2);
void PACK_APIENTRY crPackRectf(CR_PACKER_CONTEXT_ARGDECL GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void PACK_APIENTRY crPackRectfSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void PACK_APIENTRY crPackRectfv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v1, const GLfloat * v2);
void PACK_APIENTRY crPackRectfvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v1, const GLfloat * v2);
void PACK_APIENTRY crPackRecti(CR_PACKER_CONTEXT_ARGDECL GLint x1, GLint y1, GLint x2, GLint y2);
void PACK_APIENTRY crPackRectiSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x1, GLint y1, GLint x2, GLint y2);
void PACK_APIENTRY crPackRectiv(CR_PACKER_CONTEXT_ARGDECL const GLint * v1, const GLint * v2);
void PACK_APIENTRY crPackRectivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v1, const GLint * v2);
void PACK_APIENTRY crPackRects(CR_PACKER_CONTEXT_ARGDECL GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void PACK_APIENTRY crPackRectsSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void PACK_APIENTRY crPackRectsv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v1, const GLshort * v2);
void PACK_APIENTRY crPackRectsvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v1, const GLshort * v2);
void PACK_APIENTRY crPackRenderMode(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackRenderModeSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackRenderbufferStorageEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackRenderbufferStorageEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackRequestResidentProgramsNV(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids);
void PACK_APIENTRY crPackRequestResidentProgramsNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei n, const GLuint * ids);
void PACK_APIENTRY crPackRotated(CR_PACKER_CONTEXT_ARGDECL GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackRotatedSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackRotatef(CR_PACKER_CONTEXT_ARGDECL GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackRotatefSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackSampleCoverageARB(CR_PACKER_CONTEXT_ARGDECL GLclampf value, GLboolean invert);
void PACK_APIENTRY crPackSampleCoverageARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLclampf value, GLboolean invert);
void PACK_APIENTRY crPackScaled(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackScaledSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackScalef(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackScalefSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackScissor(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackScissorSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackSecondaryColor3bEXT(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue);
void PACK_APIENTRY crPackSecondaryColor3bEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLbyte red, GLbyte green, GLbyte blue);
void PACK_APIENTRY crPackSecondaryColor3bvEXT(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackSecondaryColor3bvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLbyte * v);
void PACK_APIENTRY crPackSecondaryColor3dEXT(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue);
void PACK_APIENTRY crPackSecondaryColor3dEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble red, GLdouble green, GLdouble blue);
void PACK_APIENTRY crPackSecondaryColor3dvEXT(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackSecondaryColor3dvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackSecondaryColor3fEXT(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue);
void PACK_APIENTRY crPackSecondaryColor3fEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat red, GLfloat green, GLfloat blue);
void PACK_APIENTRY crPackSecondaryColor3fvEXT(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackSecondaryColor3fvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackSecondaryColor3iEXT(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue);
void PACK_APIENTRY crPackSecondaryColor3iEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLint red, GLint green, GLint blue);
void PACK_APIENTRY crPackSecondaryColor3ivEXT(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackSecondaryColor3ivEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackSecondaryColor3sEXT(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue);
void PACK_APIENTRY crPackSecondaryColor3sEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort red, GLshort green, GLshort blue);
void PACK_APIENTRY crPackSecondaryColor3svEXT(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackSecondaryColor3svEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackSecondaryColor3ubEXT(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue);
void PACK_APIENTRY crPackSecondaryColor3ubEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLubyte red, GLubyte green, GLubyte blue);
void PACK_APIENTRY crPackSecondaryColor3ubvEXT(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackSecondaryColor3ubvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLubyte * v);
void PACK_APIENTRY crPackSecondaryColor3uiEXT(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue);
void PACK_APIENTRY crPackSecondaryColor3uiEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint red, GLuint green, GLuint blue);
void PACK_APIENTRY crPackSecondaryColor3uivEXT(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackSecondaryColor3uivEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLuint * v);
void PACK_APIENTRY crPackSecondaryColor3usEXT(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue);
void PACK_APIENTRY crPackSecondaryColor3usEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLushort red, GLushort green, GLushort blue);
void PACK_APIENTRY crPackSecondaryColor3usvEXT(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackSecondaryColor3usvEXTSWAP(CR_PACKER_CONTEXT_ARGDECL const GLushort * v);
void PACK_APIENTRY crPackSecondaryColorPointerEXT(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackSecondaryColorPointerEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackSelectBuffer(CR_PACKER_CONTEXT_ARGDECL GLsizei size, GLuint * buffer);
void PACK_APIENTRY crPackSelectBufferSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei size, GLuint * buffer);
void PACK_APIENTRY crPackSemaphoreCreateCR(CR_PACKER_CONTEXT_ARGDECL GLuint name, GLuint count);
void PACK_APIENTRY crPackSemaphoreCreateCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name, GLuint count);
void PACK_APIENTRY crPackSemaphoreDestroyCR(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSemaphoreDestroyCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSemaphorePCR(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSemaphorePCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSemaphoreVCR(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSemaphoreVCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint name);
void PACK_APIENTRY crPackSetFenceNV(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLenum condition);
void PACK_APIENTRY crPackSetFenceNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLenum condition);
void PACK_APIENTRY crPackShadeModel(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackShadeModelSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum mode);
void PACK_APIENTRY crPackShaderSource(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei count, const char ** string, const GLint * length);
void PACK_APIENTRY crPackShaderSourceSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint shader, GLsizei count, const char ** string, const GLint * length);
void PACK_APIENTRY crPackStencilFunc(CR_PACKER_CONTEXT_ARGDECL GLenum func, GLint ref, GLuint mask);
void PACK_APIENTRY crPackStencilFuncSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum func, GLint ref, GLuint mask);
void PACK_APIENTRY crPackStencilFuncSeparate(CR_PACKER_CONTEXT_ARGDECL GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void PACK_APIENTRY crPackStencilFuncSeparateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void PACK_APIENTRY crPackStencilMask(CR_PACKER_CONTEXT_ARGDECL GLuint mask);
void PACK_APIENTRY crPackStencilMaskSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint mask);
void PACK_APIENTRY crPackStencilMaskSeparate(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLuint mask);
void PACK_APIENTRY crPackStencilMaskSeparateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLuint mask);
void PACK_APIENTRY crPackStencilOp(CR_PACKER_CONTEXT_ARGDECL GLenum fail, GLenum zfail, GLenum zpass);
void PACK_APIENTRY crPackStencilOpSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum fail, GLenum zfail, GLenum zpass);
void PACK_APIENTRY crPackStencilOpSeparate(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
void PACK_APIENTRY crPackStencilOpSeparateSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
void PACK_APIENTRY crPackSwapBuffers(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint flags);
void PACK_APIENTRY crPackSwapBuffersSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint flags);
void PACK_APIENTRY crPackTestFenceNV(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackTestFenceNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint fence, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackTexCoord1d(CR_PACKER_CONTEXT_ARGDECL GLdouble s);
void PACK_APIENTRY crPackTexCoord1dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble s);
void PACK_APIENTRY crPackTexCoord1dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord1dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord1f(CR_PACKER_CONTEXT_ARGDECL GLfloat s);
void PACK_APIENTRY crPackTexCoord1fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat s);
void PACK_APIENTRY crPackTexCoord1fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord1fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord1i(CR_PACKER_CONTEXT_ARGDECL GLint s);
void PACK_APIENTRY crPackTexCoord1iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint s);
void PACK_APIENTRY crPackTexCoord1iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord1ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord1s(CR_PACKER_CONTEXT_ARGDECL GLshort s);
void PACK_APIENTRY crPackTexCoord1sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort s);
void PACK_APIENTRY crPackTexCoord1sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord1svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord2d(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t);
void PACK_APIENTRY crPackTexCoord2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t);
void PACK_APIENTRY crPackTexCoord2dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord2dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord2f(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t);
void PACK_APIENTRY crPackTexCoord2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t);
void PACK_APIENTRY crPackTexCoord2fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord2fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord2i(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t);
void PACK_APIENTRY crPackTexCoord2iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t);
void PACK_APIENTRY crPackTexCoord2iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord2ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord2s(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t);
void PACK_APIENTRY crPackTexCoord2sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t);
void PACK_APIENTRY crPackTexCoord2sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord2svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord3d(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t, GLdouble r);
void PACK_APIENTRY crPackTexCoord3dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t, GLdouble r);
void PACK_APIENTRY crPackTexCoord3dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord3dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord3f(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t, GLfloat r);
void PACK_APIENTRY crPackTexCoord3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t, GLfloat r);
void PACK_APIENTRY crPackTexCoord3fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord3fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord3i(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t, GLint r);
void PACK_APIENTRY crPackTexCoord3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t, GLint r);
void PACK_APIENTRY crPackTexCoord3iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord3ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord3s(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t, GLshort r);
void PACK_APIENTRY crPackTexCoord3sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t, GLshort r);
void PACK_APIENTRY crPackTexCoord3sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord3svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord4d(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void PACK_APIENTRY crPackTexCoord4dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void PACK_APIENTRY crPackTexCoord4dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord4dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackTexCoord4f(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void PACK_APIENTRY crPackTexCoord4fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void PACK_APIENTRY crPackTexCoord4fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord4fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackTexCoord4i(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t, GLint r, GLint q);
void PACK_APIENTRY crPackTexCoord4iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint s, GLint t, GLint r, GLint q);
void PACK_APIENTRY crPackTexCoord4iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord4ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackTexCoord4s(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t, GLshort r, GLshort q);
void PACK_APIENTRY crPackTexCoord4sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort s, GLshort t, GLshort r, GLshort q);
void PACK_APIENTRY crPackTexCoord4sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoord4svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackTexCoordPointer(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackTexCoordPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackTexEnvf(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexEnvfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexEnvfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexEnvfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexEnvi(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexEnviSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexEnviv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexEnvivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexGend(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLdouble param);
void PACK_APIENTRY crPackTexGendSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLdouble param);
void PACK_APIENTRY crPackTexGendv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLdouble * params);
void PACK_APIENTRY crPackTexGendvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLdouble * params);
void PACK_APIENTRY crPackTexGenf(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexGenfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexGenfv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexGenfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexGeni(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexGeniSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexGeniv(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexGenivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum coord, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexImage1D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage1DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage2D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage2DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage3D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage3DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage3DEXT(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexImage3DEXTSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexParameterf(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexParameterfSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLfloat param);
void PACK_APIENTRY crPackTexParameterfv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexParameterfvSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLfloat * params);
void PACK_APIENTRY crPackTexParameteri(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexParameteriSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, GLint param);
void PACK_APIENTRY crPackTexParameteriv(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexParameterivSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLenum pname, const GLint * params);
void PACK_APIENTRY crPackTexSubImage1D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexSubImage1DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexSubImage2D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexSubImage2DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexSubImage3D(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTexSubImage3DSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackTrackMatrixNV(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint address, GLenum matrix, GLenum transform);
void PACK_APIENTRY crPackTrackMatrixNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLuint address, GLenum matrix, GLenum transform);
void PACK_APIENTRY crPackTranslated(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackTranslatedSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackTranslatef(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackTranslatefSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackUniform1f(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0);
void PACK_APIENTRY crPackUniform1fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0);
void PACK_APIENTRY crPackUniform1fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform1fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform1i(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0);
void PACK_APIENTRY crPackUniform1iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0);
void PACK_APIENTRY crPackUniform1iv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform1ivSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform2f(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1);
void PACK_APIENTRY crPackUniform2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1);
void PACK_APIENTRY crPackUniform2fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform2fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform2i(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1);
void PACK_APIENTRY crPackUniform2iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1);
void PACK_APIENTRY crPackUniform2iv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform2ivSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform3f(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void PACK_APIENTRY crPackUniform3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void PACK_APIENTRY crPackUniform3fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform3fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform3i(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1, GLint v2);
void PACK_APIENTRY crPackUniform3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1, GLint v2);
void PACK_APIENTRY crPackUniform3iv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform3ivSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform4f(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void PACK_APIENTRY crPackUniform4fSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void PACK_APIENTRY crPackUniform4fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform4fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLfloat * value);
void PACK_APIENTRY crPackUniform4i(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void PACK_APIENTRY crPackUniform4iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void PACK_APIENTRY crPackUniform4iv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniform4ivSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, const GLint * value);
void PACK_APIENTRY crPackUniformMatrix2fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix2fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix2x3fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix2x3fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix2x4fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix2x4fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3x2fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3x2fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3x4fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix3x4fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4x2fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4x2fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4x3fv(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUniformMatrix4x3fvSWAP(CR_PACKER_CONTEXT_ARGDECL GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void PACK_APIENTRY crPackUnlockArraysEXT(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackUnlockArraysEXTSWAP(CR_PACKER_CONTEXT_ARGSINGLEDECL);
void PACK_APIENTRY crPackUnmapBufferARB(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackUnmapBufferARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLenum target, GLboolean* return_value, int * writeback);
void PACK_APIENTRY crPackUseProgram(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackUseProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackVBoxTexPresent(CR_PACKER_CONTEXT_ARGDECL GLuint texture, GLuint cfg, GLint xPos, GLint yPos, GLint cRects, const GLint * pRects);
void PACK_APIENTRY crPackVBoxTexPresentSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint texture, GLuint cfg, GLint xPos, GLint yPos, GLint cRects, const GLint * pRects);
void PACK_APIENTRY crPackValidateProgram(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackValidateProgramSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint program);
void PACK_APIENTRY crPackVertex2d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex2dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex2f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex2fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex2i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackVertex2iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackVertex2iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex2ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex2s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertex2svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertex3d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex3dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex3f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex3fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex3i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex3ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex3s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertex3svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertex4d(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dv(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex4dvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackVertex4f(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fv(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex4fvSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackVertex4i(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4iSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4iv(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex4ivSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackVertex4s(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4sSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4sv(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertex4svSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackVertexArrayRangeNV(CR_PACKER_CONTEXT_ARGDECL GLsizei length, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexArrayRangeNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei length, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexAttrib1dARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1fARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1sARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1svARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib1svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2dARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2fARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2sARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2svARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3dARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3fARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3sARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3svARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NivARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NubARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NubvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4bvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4bvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4dARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4fARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4ivARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4sARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4svARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4svARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4uivARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4uivARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4usvARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4usvARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttribPointerARB(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexAttribPointerARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexAttribPointerNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexAttribPointerNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexAttribs1dvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs1dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs1fvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs1fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs1svNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs1svNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs2dvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs2dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs2fvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs2fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs2svNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs2svNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs3dvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs3dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs3fvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs3fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs3svNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs3svNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs4dvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs4dvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttribs4fvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs4fvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttribs4svNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs4svNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLshort * v);
void PACK_APIENTRY crPackVertexAttribs4ubvNV(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttribs4ubvNVSWAP(CR_PACKER_CONTEXT_ARGDECL GLuint index, GLsizei n, const GLubyte * v);
void PACK_APIENTRY crPackVertexPointer(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackVertexPointerSWAP(CR_PACKER_CONTEXT_ARGDECL GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void PACK_APIENTRY crPackViewport(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackViewportSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLsizei width, GLsizei height);
void PACK_APIENTRY crPackWindowCreate(CR_PACKER_CONTEXT_ARGDECL const char * dpyName, GLint visBits, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackWindowCreateSWAP(CR_PACKER_CONTEXT_ARGDECL const char * dpyName, GLint visBits, GLint* return_value, int * writeback);
void PACK_APIENTRY crPackWindowDestroy(CR_PACKER_CONTEXT_ARGDECL GLint window);
void PACK_APIENTRY crPackWindowDestroySWAP(CR_PACKER_CONTEXT_ARGDECL GLint window);
void PACK_APIENTRY crPackWindowPos2dARB(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackWindowPos2dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y);
void PACK_APIENTRY crPackWindowPos2dvARB(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackWindowPos2dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackWindowPos2fARB(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackWindowPos2fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y);
void PACK_APIENTRY crPackWindowPos2fvARB(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackWindowPos2fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackWindowPos2iARB(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackWindowPos2iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y);
void PACK_APIENTRY crPackWindowPos2ivARB(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackWindowPos2ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackWindowPos2sARB(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackWindowPos2sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y);
void PACK_APIENTRY crPackWindowPos2svARB(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackWindowPos2svARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackWindowPos3dARB(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackWindowPos3dARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackWindowPos3dvARB(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackWindowPos3dvARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLdouble * v);
void PACK_APIENTRY crPackWindowPos3fARB(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackWindowPos3fARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackWindowPos3fvARB(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackWindowPos3fvARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLfloat * v);
void PACK_APIENTRY crPackWindowPos3iARB(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackWindowPos3iARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackWindowPos3ivARB(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackWindowPos3ivARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLint * v);
void PACK_APIENTRY crPackWindowPos3sARB(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackWindowPos3sARBSWAP(CR_PACKER_CONTEXT_ARGDECL GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackWindowPos3svARB(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackWindowPos3svARBSWAP(CR_PACKER_CONTEXT_ARGDECL const GLshort * v);
void PACK_APIENTRY crPackWindowPosition(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint x, GLint y);
void PACK_APIENTRY crPackWindowPositionSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint x, GLint y);
void PACK_APIENTRY crPackWindowShow(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint flag);
void PACK_APIENTRY crPackWindowShowSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint flag);
void PACK_APIENTRY crPackWindowSize(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint w, GLint h);
void PACK_APIENTRY crPackWindowSizeSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint w, GLint h);
void PACK_APIENTRY crPackWindowVisibleRegion(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint cRects, const GLint * pRects);
void PACK_APIENTRY crPackWindowVisibleRegionSWAP(CR_PACKER_CONTEXT_ARGDECL GLint window, GLint cRects, const GLint * pRects);
void PACK_APIENTRY crPackWriteback(CR_PACKER_CONTEXT_ARGDECL GLint * writeback);
void PACK_APIENTRY crPackWritebackSWAP(CR_PACKER_CONTEXT_ARGDECL GLint * writeback);
void PACK_APIENTRY crPackZPixCR(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLenum format, GLenum type, GLenum ztype, GLint zparm, GLint length, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackZPixCRSWAP(CR_PACKER_CONTEXT_ARGDECL GLsizei width, GLsizei height, GLenum format, GLenum type, GLenum ztype, GLint zparm, GLint length, const GLvoid * pixels, const CRPixelPackState * packstate);
void PACK_APIENTRY crPackVertex2dBBOX(GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dBBOX_COUNT(GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dBBOXSWAP(GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dBBOX_COUNTSWAP(GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertex2dvBBOX(const GLdouble * v);
void PACK_APIENTRY crPackVertex2dvBBOX_COUNT(const GLdouble * v);
void PACK_APIENTRY crPackVertex2dvBBOXSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex2dvBBOX_COUNTSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex2fBBOX(GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fBBOX_COUNT(GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fBBOXSWAP(GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fBBOX_COUNTSWAP(GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertex2fvBBOX(const GLfloat * v);
void PACK_APIENTRY crPackVertex2fvBBOX_COUNT(const GLfloat * v);
void PACK_APIENTRY crPackVertex2fvBBOXSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex2fvBBOX_COUNTSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex2iBBOX(GLint x, GLint y);
void PACK_APIENTRY crPackVertex2iBBOX_COUNT(GLint x, GLint y);
void PACK_APIENTRY crPackVertex2iBBOXSWAP(GLint x, GLint y);
void PACK_APIENTRY crPackVertex2iBBOX_COUNTSWAP(GLint x, GLint y);
void PACK_APIENTRY crPackVertex2ivBBOX(const GLint * v);
void PACK_APIENTRY crPackVertex2ivBBOX_COUNT(const GLint * v);
void PACK_APIENTRY crPackVertex2ivBBOXSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex2ivBBOX_COUNTSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex2sBBOX(GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2sBBOX_COUNT(GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2sBBOXSWAP(GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2sBBOX_COUNTSWAP(GLshort x, GLshort y);
void PACK_APIENTRY crPackVertex2svBBOX(const GLshort * v);
void PACK_APIENTRY crPackVertex2svBBOX_COUNT(const GLshort * v);
void PACK_APIENTRY crPackVertex2svBBOXSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertex2svBBOX_COUNTSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertex3dBBOX(GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dBBOX_COUNT(GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dBBOXSWAP(GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dBBOX_COUNTSWAP(GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertex3dvBBOX(const GLdouble * v);
void PACK_APIENTRY crPackVertex3dvBBOX_COUNT(const GLdouble * v);
void PACK_APIENTRY crPackVertex3dvBBOXSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex3dvBBOX_COUNTSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex3fBBOX(GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fBBOX_COUNT(GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fBBOXSWAP(GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fBBOX_COUNTSWAP(GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertex3fvBBOX(const GLfloat * v);
void PACK_APIENTRY crPackVertex3fvBBOX_COUNT(const GLfloat * v);
void PACK_APIENTRY crPackVertex3fvBBOXSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex3fvBBOX_COUNTSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex3iBBOX(GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3iBBOX_COUNT(GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3iBBOXSWAP(GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3iBBOX_COUNTSWAP(GLint x, GLint y, GLint z);
void PACK_APIENTRY crPackVertex3ivBBOX(const GLint * v);
void PACK_APIENTRY crPackVertex3ivBBOX_COUNT(const GLint * v);
void PACK_APIENTRY crPackVertex3ivBBOXSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex3ivBBOX_COUNTSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex3sBBOX(GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3sBBOX_COUNT(GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3sBBOXSWAP(GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3sBBOX_COUNTSWAP(GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertex3svBBOX(const GLshort * v);
void PACK_APIENTRY crPackVertex3svBBOX_COUNT(const GLshort * v);
void PACK_APIENTRY crPackVertex3svBBOXSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertex3svBBOX_COUNTSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertex4dBBOX(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dBBOX_COUNT(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dBBOXSWAP(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dBBOX_COUNTSWAP(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertex4dvBBOX(const GLdouble * v);
void PACK_APIENTRY crPackVertex4dvBBOX_COUNT(const GLdouble * v);
void PACK_APIENTRY crPackVertex4dvBBOXSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex4dvBBOX_COUNTSWAP(const GLdouble * v);
void PACK_APIENTRY crPackVertex4fBBOX(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fBBOX_COUNT(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fBBOXSWAP(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fBBOX_COUNTSWAP(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertex4fvBBOX(const GLfloat * v);
void PACK_APIENTRY crPackVertex4fvBBOX_COUNT(const GLfloat * v);
void PACK_APIENTRY crPackVertex4fvBBOXSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex4fvBBOX_COUNTSWAP(const GLfloat * v);
void PACK_APIENTRY crPackVertex4iBBOX(GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4iBBOX_COUNT(GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4iBBOXSWAP(GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4iBBOX_COUNTSWAP(GLint x, GLint y, GLint z, GLint w);
void PACK_APIENTRY crPackVertex4ivBBOX(const GLint * v);
void PACK_APIENTRY crPackVertex4ivBBOX_COUNT(const GLint * v);
void PACK_APIENTRY crPackVertex4ivBBOXSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex4ivBBOX_COUNTSWAP(const GLint * v);
void PACK_APIENTRY crPackVertex4sBBOX(GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4sBBOX_COUNT(GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4sBBOXSWAP(GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4sBBOX_COUNTSWAP(GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertex4svBBOX(const GLshort * v);
void PACK_APIENTRY crPackVertex4svBBOX_COUNT(const GLshort * v);
void PACK_APIENTRY crPackVertex4svBBOXSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertex4svBBOX_COUNTSWAP(const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib1dARBBBOX(GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dARBBBOX_COUNT(GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dARBBBOXSWAP(GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dARBBBOX_COUNTSWAP(GLuint index, GLdouble x);
void PACK_APIENTRY crPackVertexAttrib1dvARBBBOX(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1dvARBBBOX_COUNT(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1dvARBBBOXSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1dvARBBBOX_COUNTSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib1fARBBBOX(GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fARBBBOX_COUNT(GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fARBBBOXSWAP(GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fARBBBOX_COUNTSWAP(GLuint index, GLfloat x);
void PACK_APIENTRY crPackVertexAttrib1fvARBBBOX(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1fvARBBBOX_COUNT(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1fvARBBBOXSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1fvARBBBOX_COUNTSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib1sARBBBOX(GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1sARBBBOX_COUNT(GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1sARBBBOXSWAP(GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1sARBBBOX_COUNTSWAP(GLuint index, GLshort x);
void PACK_APIENTRY crPackVertexAttrib1svARBBBOX(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib1svARBBBOX_COUNT(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib1svARBBBOXSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib1svARBBBOX_COUNTSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2dARBBBOX(GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dARBBBOX_COUNT(GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dARBBBOXSWAP(GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dARBBBOX_COUNTSWAP(GLuint index, GLdouble x, GLdouble y);
void PACK_APIENTRY crPackVertexAttrib2dvARBBBOX(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2dvARBBBOX_COUNT(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2dvARBBBOXSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2dvARBBBOX_COUNTSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib2fARBBBOX(GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fARBBBOX_COUNT(GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fARBBBOXSWAP(GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fARBBBOX_COUNTSWAP(GLuint index, GLfloat x, GLfloat y);
void PACK_APIENTRY crPackVertexAttrib2fvARBBBOX(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2fvARBBBOX_COUNT(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2fvARBBBOXSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2fvARBBBOX_COUNTSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib2sARBBBOX(GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2sARBBBOX_COUNT(GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2sARBBBOXSWAP(GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2sARBBBOX_COUNTSWAP(GLuint index, GLshort x, GLshort y);
void PACK_APIENTRY crPackVertexAttrib2svARBBBOX(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2svARBBBOX_COUNT(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2svARBBBOXSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib2svARBBBOX_COUNTSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3dARBBBOX(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dARBBBOX_COUNT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dARBBBOXSWAP(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dARBBBOX_COUNTSWAP(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void PACK_APIENTRY crPackVertexAttrib3dvARBBBOX(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3dvARBBBOX_COUNT(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3dvARBBBOXSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3dvARBBBOX_COUNTSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib3fARBBBOX(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fARBBBOX_COUNT(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fARBBBOXSWAP(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fARBBBOX_COUNTSWAP(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void PACK_APIENTRY crPackVertexAttrib3fvARBBBOX(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3fvARBBBOX_COUNT(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3fvARBBBOXSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3fvARBBBOX_COUNTSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib3sARBBBOX(GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3sARBBBOX_COUNT(GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3sARBBBOXSWAP(GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3sARBBBOX_COUNTSWAP(GLuint index, GLshort x, GLshort y, GLshort z);
void PACK_APIENTRY crPackVertexAttrib3svARBBBOX(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3svARBBBOX_COUNT(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3svARBBBOXSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib3svARBBBOX_COUNTSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARBBBOX(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARBBBOX_COUNT(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARBBBOXSWAP(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NbvARBBBOX_COUNTSWAP(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4NivARBBBOX(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NivARBBBOX_COUNT(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NivARBBBOXSWAP(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NivARBBBOX_COUNTSWAP(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARBBBOX(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARBBBOX_COUNT(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARBBBOXSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NsvARBBBOX_COUNTSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4NubARBBBOX(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubARBBBOX_COUNT(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubARBBBOXSWAP(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubARBBBOX_COUNTSWAP(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void PACK_APIENTRY crPackVertexAttrib4NubvARBBBOX(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NubvARBBBOX_COUNT(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NubvARBBBOXSWAP(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NubvARBBBOX_COUNTSWAP(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARBBBOX(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARBBBOX_COUNT(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARBBBOXSWAP(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NuivARBBBOX_COUNTSWAP(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARBBBOX(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARBBBOX_COUNT(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARBBBOXSWAP(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4NusvARBBBOX_COUNTSWAP(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4bvARBBBOX(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4bvARBBBOX_COUNT(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4bvARBBBOXSWAP(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4bvARBBBOX_COUNTSWAP(GLuint index, const GLbyte * v);
void PACK_APIENTRY crPackVertexAttrib4dARBBBOX(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dARBBBOX_COUNT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dARBBBOXSWAP(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dARBBBOX_COUNTSWAP(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void PACK_APIENTRY crPackVertexAttrib4dvARBBBOX(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4dvARBBBOX_COUNT(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4dvARBBBOXSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4dvARBBBOX_COUNTSWAP(GLuint index, const GLdouble * v);
void PACK_APIENTRY crPackVertexAttrib4fARBBBOX(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fARBBBOX_COUNT(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fARBBBOXSWAP(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fARBBBOX_COUNTSWAP(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void PACK_APIENTRY crPackVertexAttrib4fvARBBBOX(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4fvARBBBOX_COUNT(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4fvARBBBOXSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4fvARBBBOX_COUNTSWAP(GLuint index, const GLfloat * v);
void PACK_APIENTRY crPackVertexAttrib4ivARBBBOX(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4ivARBBBOX_COUNT(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4ivARBBBOXSWAP(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4ivARBBBOX_COUNTSWAP(GLuint index, const GLint * v);
void PACK_APIENTRY crPackVertexAttrib4sARBBBOX(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4sARBBBOX_COUNT(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4sARBBBOXSWAP(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4sARBBBOX_COUNTSWAP(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void PACK_APIENTRY crPackVertexAttrib4svARBBBOX(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4svARBBBOX_COUNT(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4svARBBBOXSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4svARBBBOX_COUNTSWAP(GLuint index, const GLshort * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARBBBOX(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARBBBOX_COUNT(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARBBBOXSWAP(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4ubvARBBBOX_COUNTSWAP(GLuint index, const GLubyte * v);
void PACK_APIENTRY crPackVertexAttrib4uivARBBBOX(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4uivARBBBOX_COUNT(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4uivARBBBOXSWAP(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4uivARBBBOX_COUNTSWAP(GLuint index, const GLuint * v);
void PACK_APIENTRY crPackVertexAttrib4usvARBBBOX(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4usvARBBBOX_COUNT(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4usvARBBBOXSWAP(GLuint index, const GLushort * v);
void PACK_APIENTRY crPackVertexAttrib4usvARBBBOX_COUNTSWAP(GLuint index, const GLushort * v);

#ifdef __cplusplus
}
#endif

#endif /* CR_PACKFUNCTIONS_H */

