/* Copyright (c) 2001, Stanford University
	All rights reserved.

	See the file LICENSE.txt for information on redistributing this software. */
	

/* DO NOT EDIT - THIS FILE GENERATED BY THE pack_currentheader.py SCRIPT */

#ifndef CR_CURRENT_H
#define CR_CURRENT_H

#include "state/cr_limits.h"

typedef struct {
	const unsigned char *ptr;
	const unsigned char *b3;
	const unsigned char *b4;
	const unsigned char *ub3;
	const unsigned char *ub4;
	const unsigned char *s3;
	const unsigned char *s4;
	const unsigned char *us3;
	const unsigned char *us4;
	const unsigned char *i3;
	const unsigned char *i4;
	const unsigned char *ui3;
	const unsigned char *ui4;
	const unsigned char *f3;
	const unsigned char *f4;
	const unsigned char *d3;
	const unsigned char *d4;
} GLcolor_p;

typedef struct {
	const unsigned char *ptr;
	const unsigned char *l1;
} GLedgeflag_p;

typedef struct {
	const unsigned char *ptr;
	const unsigned char *f1;
	const unsigned char *d1;
} GLfogcoord_p;

typedef struct {
	const unsigned char *ptr;
	const unsigned char *ub1;
	const unsigned char *s1;
	const unsigned char *i1;
	const unsigned char *f1;
	const unsigned char *d1;
} GLindex_p;

typedef struct {
	const unsigned char *ptr;
	const unsigned char *b3;
	const unsigned char *s3;
	const unsigned char *i3;
	const unsigned char *f3;
	const unsigned char *d3;
} GLnormal_p;

typedef struct {
	const unsigned char *ptr;
	const unsigned char *b3;
	const unsigned char *ub3;
	const unsigned char *s3;
	const unsigned char *us3;
	const unsigned char *i3;
	const unsigned char *ui3;
	const unsigned char *f3;
	const unsigned char *d3;
} GLsecondarycolor_p;

typedef struct {
	const unsigned char *ptr[CR_MAX_TEXTURE_UNITS];
	const unsigned char *s1[CR_MAX_TEXTURE_UNITS];
	const unsigned char *s2[CR_MAX_TEXTURE_UNITS];
	const unsigned char *s3[CR_MAX_TEXTURE_UNITS];
	const unsigned char *s4[CR_MAX_TEXTURE_UNITS];
	const unsigned char *i1[CR_MAX_TEXTURE_UNITS];
	const unsigned char *i2[CR_MAX_TEXTURE_UNITS];
	const unsigned char *i3[CR_MAX_TEXTURE_UNITS];
	const unsigned char *i4[CR_MAX_TEXTURE_UNITS];
	const unsigned char *f1[CR_MAX_TEXTURE_UNITS];
	const unsigned char *f2[CR_MAX_TEXTURE_UNITS];
	const unsigned char *f3[CR_MAX_TEXTURE_UNITS];
	const unsigned char *f4[CR_MAX_TEXTURE_UNITS];
	const unsigned char *d1[CR_MAX_TEXTURE_UNITS];
	const unsigned char *d2[CR_MAX_TEXTURE_UNITS];
	const unsigned char *d3[CR_MAX_TEXTURE_UNITS];
	const unsigned char *d4[CR_MAX_TEXTURE_UNITS];
} GLtexcoord_p;

typedef struct {
	const unsigned char *ptr[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *s1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *s2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *s3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *s4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *f1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *f2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *f3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *f4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *d1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *d2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *d3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *d4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *b1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *b2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *b3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *b4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *i1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *i2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *i3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *i4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ub1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ub2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ub3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ub4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ui1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ui2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ui3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *ui4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *us1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *us2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *us3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *us4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nub1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nub2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nub3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nub4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nus1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nus2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nus3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nus4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nui1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nui2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nui3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nui4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nb1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nb2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nb3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Nb4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ns1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ns2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ns3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ns4[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ni1[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ni2[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ni3[CR_MAX_VERTEX_ATTRIBS];
	const unsigned char *Ni4[CR_MAX_VERTEX_ATTRIBS];
} GLvertexattrib_p;

typedef	struct attrs {
	GLcolor_p color;
	GLedgeflag_p edgeFlag;
	GLfogcoord_p fogCoord;
	GLindex_p index;
	GLnormal_p normal;
	GLsecondarycolor_p secondaryColor;
	GLtexcoord_p texCoord;
	GLvertexattrib_p vertexAttrib;
	} CRCurrentStateAttr;
typedef struct {

	CRCurrentStateAttr c;
	unsigned char *vtx_op;
	unsigned char *vtx_data;
	unsigned char *begin_op;
	unsigned char *begin_data;
	unsigned int vtx_count;
	unsigned int vtx_max;
	unsigned int vtx_count_begin;
	unsigned int attribsUsedMask;
    unsigned int changedVertexAttrib;
} CRCurrentStatePointers;

#endif /* CR_CURRENT_H */

