/* Copyright (c) 2001, Stanford University
	All rights reserved.

	See the file LICENSE.txt for information on redistributing this software. */
	

/* DO NOT EDIT - THIS FILE AUTOMATICALLY GENERATED BY state_funcs.py SCRIPT */
#ifndef CR_STATE_FUNCS_H
#define CR_STATE_FUNCS_H

#include "chromium.h"
#include "cr_error.h"

#include <iprt/cdefs.h>

#if defined(WINDOWS)
#define STATE_APIENTRY __stdcall
#else
#define STATE_APIENTRY
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define STATE_UNUSED(x) ((void)x)
DECLEXPORT(void) STATE_APIENTRY crStateActiveStencilFaceEXT(GLenum face);
DECLEXPORT(void) STATE_APIENTRY crStateActiveTextureARB(GLenum texture);
DECLEXPORT(void) STATE_APIENTRY crStateAlphaFunc(GLenum func, GLclampf ref);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateAreProgramsResidentNV(GLsizei n, const GLuint * ids, GLboolean * residences);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
DECLEXPORT(void) STATE_APIENTRY crStateAttachShader(GLuint program, GLuint shader);
DECLEXPORT(void) STATE_APIENTRY crStateBegin(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateBeginQueryARB(GLenum target, GLuint id);
DECLEXPORT(void) STATE_APIENTRY crStateBindAttribLocation(GLuint program, GLuint index, const char * name);
DECLEXPORT(void) STATE_APIENTRY crStateBindBufferARB(GLenum target, GLuint buffer);
DECLEXPORT(void) STATE_APIENTRY crStateBindFramebufferEXT(GLenum target, GLuint framebuffer);
DECLEXPORT(void) STATE_APIENTRY crStateBindProgramARB(GLenum target, GLuint program);
DECLEXPORT(void) STATE_APIENTRY crStateBindProgramNV(GLenum target, GLuint id);
DECLEXPORT(void) STATE_APIENTRY crStateBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
DECLEXPORT(void) STATE_APIENTRY crStateBindTexture(GLenum target, GLuint texture);
DECLEXPORT(void) STATE_APIENTRY crStateBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
DECLEXPORT(void) STATE_APIENTRY crStateBlendColorEXT(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
DECLEXPORT(void) STATE_APIENTRY crStateBlendEquationEXT(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateBlendFunc(GLenum sfactor, GLenum dfactor);
DECLEXPORT(void) STATE_APIENTRY crStateBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
DECLEXPORT(void) STATE_APIENTRY crStateBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
DECLEXPORT(void) STATE_APIENTRY crStateBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
DECLEXPORT(void) STATE_APIENTRY crStateClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
DECLEXPORT(void) STATE_APIENTRY crStateClearDepth(GLclampd depth);
DECLEXPORT(void) STATE_APIENTRY crStateClearIndex(GLfloat c);
DECLEXPORT(void) STATE_APIENTRY crStateClearStencil(GLint s);
DECLEXPORT(void) STATE_APIENTRY crStateClientActiveTextureARB(GLenum texture);
DECLEXPORT(void) STATE_APIENTRY crStateClipPlane(GLenum plane, const GLdouble * equation);
DECLEXPORT(void) STATE_APIENTRY crStateColor3f(GLfloat red, GLfloat green, GLfloat blue);
DECLEXPORT(void) STATE_APIENTRY crStateColor3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
DECLEXPORT(void) STATE_APIENTRY crStateColor4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
DECLEXPORT(void) STATE_APIENTRY crStateColorMaterial(GLenum face, GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerParameterfNV(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerParameterfvNV(GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerParameteriNV(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerParameterivNV(GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateCompileShader(GLuint shader);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imagesize, const GLvoid * data);
DECLEXPORT(void) STATE_APIENTRY crStateCopyTexImage2D(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
DECLEXPORT(void) STATE_APIENTRY crStateCullFace(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteBuffersARB(GLsizei n, const GLuint * buffer);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteFencesNV(GLsizei n, const GLuint * fences);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteLists(GLuint list, GLsizei range);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteProgram(GLuint program);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteProgramsARB(GLsizei n, const GLuint * programs);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteQueriesARB(GLsizei n, const GLuint * ids);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteShader(GLuint shader);
DECLEXPORT(void) STATE_APIENTRY crStateDeleteTextures(GLsizei n, const GLuint * textures);
DECLEXPORT(void) STATE_APIENTRY crStateDepthFunc(GLenum func);
DECLEXPORT(void) STATE_APIENTRY crStateDepthMask(GLboolean flag);
DECLEXPORT(void) STATE_APIENTRY crStateDepthRange(GLclampd zNear, GLclampd zFar);
DECLEXPORT(void) STATE_APIENTRY crStateDetachShader(GLuint program, GLuint shader);
DECLEXPORT(void) STATE_APIENTRY crStateDisable(GLenum cap);
DECLEXPORT(void) STATE_APIENTRY crStateDisableClientState(GLenum array);
DECLEXPORT(void) STATE_APIENTRY crStateDisableVertexAttribArrayARB(GLuint index);
DECLEXPORT(void) STATE_APIENTRY crStateDrawBuffer(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateEdgeFlagPointer(GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateEnable(GLenum cap);
DECLEXPORT(void) STATE_APIENTRY crStateEnableClientState(GLenum array);
DECLEXPORT(void) STATE_APIENTRY crStateEnableVertexAttribArrayARB(GLuint index);
DECLEXPORT(void) STATE_APIENTRY crStateEnd(void);
DECLEXPORT(void) STATE_APIENTRY crStateEndList(void);
DECLEXPORT(void) STATE_APIENTRY crStateEndQueryARB(GLenum target);
DECLEXPORT(void) STATE_APIENTRY crStateExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
DECLEXPORT(void) STATE_APIENTRY crStateFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
DECLEXPORT(void) STATE_APIENTRY crStateFinishFenceNV(GLuint fence);
DECLEXPORT(void) STATE_APIENTRY crStateFlushVertexArrayRangeNV(void);
DECLEXPORT(void) STATE_APIENTRY crStateFogCoordPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateFogf(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateFogfv(GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateFogi(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateFogiv(GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
DECLEXPORT(void) STATE_APIENTRY crStateFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
DECLEXPORT(void) STATE_APIENTRY crStateFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
DECLEXPORT(void) STATE_APIENTRY crStateFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
DECLEXPORT(void) STATE_APIENTRY crStateFrontFace(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
DECLEXPORT(void) STATE_APIENTRY crStateGenBuffersARB(GLsizei n, GLuint * buffer);
DECLEXPORT(void) STATE_APIENTRY crStateGenFencesNV(GLsizei n, GLuint * fences);
DECLEXPORT(void) STATE_APIENTRY crStateGenFramebuffersEXT(GLsizei n, GLuint * framebuffers);
DECLEXPORT(GLuint) STATE_APIENTRY crStateGenLists(GLsizei range);
DECLEXPORT(void) STATE_APIENTRY crStateGenProgramsARB(GLsizei n, GLuint * programs);
DECLEXPORT(void) STATE_APIENTRY crStateGenProgramsNV(GLsizei n, GLuint * ids);
DECLEXPORT(void) STATE_APIENTRY crStateGenQueriesARB(GLsizei n, GLuint * ids);
DECLEXPORT(void) STATE_APIENTRY crStateGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers);
DECLEXPORT(void) STATE_APIENTRY crStateGenTextures(GLsizei n, GLuint * textures);
DECLEXPORT(void) STATE_APIENTRY crStateGenerateMipmapEXT(GLenum target);
DECLEXPORT(GLint) STATE_APIENTRY crStateGetAttribLocation(GLuint program, const char * name);
DECLEXPORT(void) STATE_APIENTRY crStateGetBooleanv(GLenum pname, GLboolean * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetBufferPointervARB(GLenum target, GLenum pname, GLvoid ** params);
DECLEXPORT(void) STATE_APIENTRY crStateGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
DECLEXPORT(void) STATE_APIENTRY crStateGetClipPlane(GLenum plane, GLdouble * equation);
DECLEXPORT(void) STATE_APIENTRY crStateGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetCompressedTexImageARB(GLenum target, GLint level, GLvoid * img);
DECLEXPORT(void) STATE_APIENTRY crStateGetDoublev(GLenum pname, GLdouble * params);
DECLEXPORT(GLenum) STATE_APIENTRY crStateGetError(void);
DECLEXPORT(void) STATE_APIENTRY crStateGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetFloatv(GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetIntegerv(GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetLightfv(GLenum light, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetLightiv(GLenum light, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetMapdv(GLenum target, GLenum query, GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateGetMapfv(GLenum target, GLenum query, GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateGetMapiv(GLenum target, GLenum query, GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateGetMaterialfv(GLenum face, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetMaterialiv(GLenum face, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetPixelMapfv(GLenum map, GLfloat * values);
DECLEXPORT(void) STATE_APIENTRY crStateGetPixelMapuiv(GLenum map, GLuint * values);
DECLEXPORT(void) STATE_APIENTRY crStateGetPixelMapusv(GLenum map, GLushort * values);
DECLEXPORT(void) STATE_APIENTRY crStateGetPointerv(GLenum pname, GLvoid ** params);
DECLEXPORT(void) STATE_APIENTRY crStateGetPolygonStipple(GLubyte * mask);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramStringARB(GLenum target, GLenum pname, GLvoid * string);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramivARB(GLenum target, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetProgramivNV(GLuint id, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetQueryivARB(GLenum target, GLenum pname, GLint * params);
DECLEXPORT(const GLubyte *) STATE_APIENTRY crStateGetString(GLenum name);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexEnviv(GLenum target, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexGeniv(GLenum coord, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params);
DECLEXPORT(GLint) STATE_APIENTRY crStateGetUniformLocation(GLuint program, const char * name);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid ** pointer);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribPointervNV(GLuint index, GLenum pname, GLvoid ** pointer);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateHint(GLenum target, GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateIndexMask(GLuint mask);
DECLEXPORT(void) STATE_APIENTRY crStateIndexPointer(GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateInitNames(void);
DECLEXPORT(void) STATE_APIENTRY crStateInterleavedArrays(GLenum format, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsBufferARB(GLuint buffer);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsEnabled(GLenum cap);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsFenceNV(GLuint fence);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsFramebufferEXT(GLuint framebuffer);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsList(GLuint list);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsProgramARB(GLuint program);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsQueryARB(GLuint id);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsRenderbufferEXT(GLuint renderbuffer);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateIsTexture(GLuint texture);
DECLEXPORT(void) STATE_APIENTRY crStateLightModelf(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateLightModelfv(GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateLightModeli(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateLightModeliv(GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateLightf(GLenum light, GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateLightfv(GLenum light, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateLighti(GLenum light, GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateLightiv(GLenum light, GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateLineStipple(GLint factor, GLushort pattern);
DECLEXPORT(void) STATE_APIENTRY crStateLineWidth(GLfloat width);
DECLEXPORT(void) STATE_APIENTRY crStateLinkProgram(GLuint program);
DECLEXPORT(void) STATE_APIENTRY crStateListBase(GLuint base);
DECLEXPORT(void) STATE_APIENTRY crStateLoadIdentity(void);
DECLEXPORT(void) STATE_APIENTRY crStateLoadMatrixd(const GLdouble * m);
DECLEXPORT(void) STATE_APIENTRY crStateLoadMatrixf(const GLfloat * m);
DECLEXPORT(void) STATE_APIENTRY crStateLoadName(GLuint name);
DECLEXPORT(void) STATE_APIENTRY crStateLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
DECLEXPORT(void) STATE_APIENTRY crStateLoadTransposeMatrixdARB(const GLdouble * m);
DECLEXPORT(void) STATE_APIENTRY crStateLoadTransposeMatrixfARB(const GLfloat * m);
DECLEXPORT(void) STATE_APIENTRY crStateLockArraysEXT(GLint first, GLint count);
DECLEXPORT(void) STATE_APIENTRY crStateLogicOp(GLenum opcode);
DECLEXPORT(void) STATE_APIENTRY crStateMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
DECLEXPORT(void) STATE_APIENTRY crStateMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
DECLEXPORT(void) STATE_APIENTRY crStateMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
DECLEXPORT(void) STATE_APIENTRY crStateMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
DECLEXPORT(void *) STATE_APIENTRY crStateMapBufferARB(GLenum target, GLenum access);
DECLEXPORT(void) STATE_APIENTRY crStateMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
DECLEXPORT(void) STATE_APIENTRY crStateMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
DECLEXPORT(void) STATE_APIENTRY crStateMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
DECLEXPORT(void) STATE_APIENTRY crStateMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
DECLEXPORT(void) STATE_APIENTRY crStateMaterialf(GLenum face, GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateMaterialfv(GLenum face, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateMateriali(GLenum face, GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateMaterialiv(GLenum face, GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateMatrixMode(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateMultMatrixd(const GLdouble * m);
DECLEXPORT(void) STATE_APIENTRY crStateMultMatrixf(const GLfloat * m);
DECLEXPORT(void) STATE_APIENTRY crStateMultTransposeMatrixdARB(const GLdouble * m);
DECLEXPORT(void) STATE_APIENTRY crStateMultTransposeMatrixfARB(const GLfloat * m);
DECLEXPORT(void) STATE_APIENTRY crStateNewList(GLuint list, GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateNormalPointer(GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
DECLEXPORT(void) STATE_APIENTRY crStatePassThrough(GLfloat token);
DECLEXPORT(void) STATE_APIENTRY crStatePixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
DECLEXPORT(void) STATE_APIENTRY crStatePixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
DECLEXPORT(void) STATE_APIENTRY crStatePixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
DECLEXPORT(void) STATE_APIENTRY crStatePixelStoref(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStatePixelStorei(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStatePixelTransferf(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStatePixelTransferi(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStatePixelZoom(GLfloat xfactor, GLfloat yfactor);
DECLEXPORT(void) STATE_APIENTRY crStatePointParameterfARB(GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStatePointParameterfvARB(GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStatePointParameteri(GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStatePointParameteriv(GLenum pname, const GLint * param);
DECLEXPORT(void) STATE_APIENTRY crStatePointSize(GLfloat size);
DECLEXPORT(void) STATE_APIENTRY crStatePolygonMode(GLenum face, GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStatePolygonOffset(GLfloat factor, GLfloat units);
DECLEXPORT(void) STATE_APIENTRY crStatePolygonStipple(const GLubyte * mask);
DECLEXPORT(void) STATE_APIENTRY crStatePopAttrib(void);
DECLEXPORT(void) STATE_APIENTRY crStatePopClientAttrib(void);
DECLEXPORT(void) STATE_APIENTRY crStatePopMatrix(void);
DECLEXPORT(void) STATE_APIENTRY crStatePopName(void);
DECLEXPORT(void) STATE_APIENTRY crStatePrioritizeTextures(GLsizei n, const GLuint * textures, const GLclampf * priorities);
DECLEXPORT(void) STATE_APIENTRY crStateProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameters4dvNV(GLenum target, GLuint index, GLuint num, const GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramParameters4fvNV(GLenum target, GLuint index, GLuint num, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid * string);
DECLEXPORT(void) STATE_APIENTRY crStatePushAttrib(GLbitfield mask);
DECLEXPORT(void) STATE_APIENTRY crStatePushClientAttrib(GLbitfield mask);
DECLEXPORT(void) STATE_APIENTRY crStatePushMatrix(void);
DECLEXPORT(void) STATE_APIENTRY crStatePushName(GLuint name);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2d(GLdouble x, GLdouble y);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2f(GLfloat x, GLfloat y);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2i(GLint x, GLint y);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2s(GLshort x, GLshort y);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos2sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3i(GLint x, GLint y, GLint z);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3s(GLshort x, GLshort y, GLshort z);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos3sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4i(GLint x, GLint y, GLint z, GLint w);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
DECLEXPORT(void) STATE_APIENTRY crStateRasterPos4sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateReadBuffer(GLenum mode);
DECLEXPORT(GLint) STATE_APIENTRY crStateRenderMode(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
DECLEXPORT(void) STATE_APIENTRY crStateRequestResidentProgramsNV(GLsizei n, const GLuint * ids);
DECLEXPORT(void) STATE_APIENTRY crStateRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateSampleCoverageARB(GLclampf value, GLboolean invert);
DECLEXPORT(void) STATE_APIENTRY crStateScaled(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateScalef(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateScissor(GLint x, GLint y, GLsizei width, GLsizei height);
DECLEXPORT(void) STATE_APIENTRY crStateSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateSelectBuffer(GLsizei size, GLuint * buffer);
DECLEXPORT(void) STATE_APIENTRY crStateSetFenceNV(GLuint fence, GLenum condition);
DECLEXPORT(void) STATE_APIENTRY crStateShadeModel(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateStencilFunc(GLenum func, GLint ref, GLuint mask);
DECLEXPORT(void) STATE_APIENTRY crStateStencilFuncSeparate(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
DECLEXPORT(void) STATE_APIENTRY crStateStencilMask(GLuint mask);
DECLEXPORT(void) STATE_APIENTRY crStateStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
DECLEXPORT(void) STATE_APIENTRY crStateStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateTestFenceNV(GLuint fence);
DECLEXPORT(void) STATE_APIENTRY crStateTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateTexEnvf(GLenum target, GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateTexEnvfv(GLenum target, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexEnvi(GLenum target, GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateTexEnviv(GLenum target, GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexGend(GLenum coord, GLenum pname, GLdouble param);
DECLEXPORT(void) STATE_APIENTRY crStateTexGendv(GLenum coord, GLenum pname, const GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexGenf(GLenum coord, GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateTexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexGeni(GLenum coord, GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateTexGeniv(GLenum coord, GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexImage1D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexImage2D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexImage3DEXT(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexParameterf(GLenum target, GLenum pname, GLfloat param);
DECLEXPORT(void) STATE_APIENTRY crStateTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexParameteri(GLenum target, GLenum pname, GLint param);
DECLEXPORT(void) STATE_APIENTRY crStateTexParameteriv(GLenum target, GLenum pname, const GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
DECLEXPORT(void) STATE_APIENTRY crStateTranslated(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateTranslatef(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateUnlockArraysEXT(void);
DECLEXPORT(GLboolean) STATE_APIENTRY crStateUnmapBufferARB(GLenum target);
DECLEXPORT(void) STATE_APIENTRY crStateUseProgram(GLuint program);
DECLEXPORT(void) STATE_APIENTRY crStateValidateProgram(GLuint program);
DECLEXPORT(void) STATE_APIENTRY crStateVertexArrayRangeNV(GLsizei length, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateVertexAttribPointerNV(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
DECLEXPORT(void) STATE_APIENTRY crStateViewport(GLint x, GLint y, GLsizei width, GLsizei height);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2dARB(GLdouble x, GLdouble y);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2dvARB(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2fARB(GLfloat x, GLfloat y);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2fvARB(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2iARB(GLint x, GLint y);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2ivARB(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2sARB(GLshort x, GLshort y);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos2svARB(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3dvARB(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3fvARB(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3iARB(GLint x, GLint y, GLint z);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3ivARB(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3sARB(GLshort x, GLshort y, GLshort z);
DECLEXPORT(void) STATE_APIENTRY crStateWindowPos3svARB(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackBegin(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackEnd(void);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackGetBooleanv(GLenum pname, GLboolean * params);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackGetDoublev(GLenum pname, GLdouble * params);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackGetFloatv(GLenum pname, GLfloat * params);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackGetIntegerv(GLenum pname, GLint * params);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectdv(const GLdouble * v1, const GLdouble * v2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectfv(const GLfloat * v1, const GLfloat * v2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRecti(GLint x1, GLint y1, GLint x2, GLint y2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectiv(const GLint * v1, const GLint * v2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackRectsv(const GLshort * v1, const GLshort * v2);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1d(GLdouble s);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1f(GLfloat s);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1i(GLint s);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1s(GLshort s);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord1sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2d(GLdouble s, GLdouble t);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2f(GLfloat s, GLfloat t);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2i(GLint s, GLint t);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2s(GLshort s, GLshort t);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord2sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3i(GLint s, GLint t, GLint r);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3s(GLshort s, GLshort t, GLshort r);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord3sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4i(GLint s, GLint t, GLint r, GLint q);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackTexCoord4sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2d(GLdouble x, GLdouble y);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2f(GLfloat x, GLfloat y);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2i(GLint x, GLint y);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2s(GLshort x, GLshort y);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex2sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3d(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3f(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3i(GLint x, GLint y, GLint z);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3s(GLshort x, GLshort y, GLshort z);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex3sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4i(GLint x, GLint y, GLint z, GLint w);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
DECLEXPORT(void) STATE_APIENTRY crStateFeedbackVertex4sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectBegin(GLenum mode);
DECLEXPORT(void) STATE_APIENTRY crStateSelectBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
DECLEXPORT(void) STATE_APIENTRY crStateSelectCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
DECLEXPORT(void) STATE_APIENTRY crStateSelectDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
DECLEXPORT(void) STATE_APIENTRY crStateSelectEnd(void);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2d(GLdouble x, GLdouble y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2f(GLfloat x, GLfloat y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2i(GLint x, GLint y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2s(GLshort x, GLshort y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos2sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3i(GLint x, GLint y, GLint z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3s(GLshort x, GLshort y, GLshort z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos3sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4i(GLint x, GLint y, GLint z, GLint w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRasterPos4sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectdv(const GLdouble * v1, const GLdouble * v2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectfv(const GLfloat * v1, const GLfloat * v2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRecti(GLint x1, GLint y1, GLint x2, GLint y2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectiv(const GLint * v1, const GLint * v2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectRectsv(const GLshort * v1, const GLshort * v2);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2d(GLdouble x, GLdouble y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2f(GLfloat x, GLfloat y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2i(GLint x, GLint y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2s(GLshort x, GLshort y);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex2sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3d(GLdouble x, GLdouble y, GLdouble z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3f(GLfloat x, GLfloat y, GLfloat z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3i(GLint x, GLint y, GLint z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3s(GLshort x, GLshort y, GLshort z);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex3sv(const GLshort * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4dv(const GLdouble * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4fv(const GLfloat * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4i(GLint x, GLint y, GLint z, GLint w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4iv(const GLint * v);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
DECLEXPORT(void) STATE_APIENTRY crStateSelectVertex4sv(const GLshort * v);

#ifdef __cplusplus
}
#endif

#endif /* CR_STATE_FUNCS_H */

