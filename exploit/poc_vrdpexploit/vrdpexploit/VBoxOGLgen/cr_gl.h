
/** @file
 * VBox OpenGL chromium functions header
 */

/*
 * Copyright (C) 2008-2016 Oracle Corporation
 *
 * This file is part of VirtualBox Open Source Edition (OSE), as
 * available from http://www.virtualbox.org. This file is free software;
 * you can redistribute it and/or modify it under the terms of the GNU
 * General Public License (GPL) as published by the Free Software
 * Foundation, in version 2 as it comes in the "COPYING" file of the
 * VirtualBox OSE distribution. VirtualBox OSE is distributed in the
 * hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
 */

/* Copyright (c) 2001, Stanford University
	All rights reserved.

	See the file LICENSE.txt for information on redistributing this software. */
	

/* DO NOT EDIT - THIS FILE GENERATED BY THE cr_gl.py SCRIPT */
#ifndef __CR_GL_H__
#define __CR_GL_H__

#include "chromium.h"
#include "cr_string.h"
#include "cr_version.h"
#include "stub.h"

#ifdef WINDOWS
#pragma warning( disable: 4055 )
#endif


extern void cr_glAccum(GLenum op, GLfloat value);
extern void cr_glActiveStencilFaceEXT(GLenum face);
extern void cr_glActiveTexture(GLenum texture);
extern void cr_glActiveTextureARB(GLenum texture);
extern void cr_glAlphaFunc(GLenum func, GLclampf ref);
extern GLboolean cr_glAreProgramsResidentNV(GLsizei n, const GLuint * ids, GLboolean * residences);
extern GLboolean cr_glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
extern GLboolean cr_glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences);
extern void cr_glArrayElement(GLint i);
extern void cr_glAttachObjectARB(VBoxGLhandleARB containerObj, VBoxGLhandleARB obj);
extern void cr_glAttachShader(GLuint program, GLuint shader);
extern void cr_glBarrierCreateCR(GLuint name, GLuint count);
extern void cr_glBarrierDestroyCR(GLuint name);
extern void cr_glBarrierExecCR(GLuint name);
extern void cr_glBegin(GLenum mode);
extern void cr_glBeginQueryARB(GLenum target, GLuint id);
extern void cr_glBindAttribLocation(GLuint program, GLuint index, const char * name);
extern void cr_glBindAttribLocationARB(VBoxGLhandleARB programObj, GLuint index, const GLcharARB * name);
extern void cr_glBindBuffer(GLenum target, GLuint buffer);
extern void cr_glBindBufferARB(GLenum target, GLuint buffer);
extern void cr_glBindFramebufferEXT(GLenum target, GLuint framebuffer);
extern void cr_glBindProgramARB(GLenum target, GLuint program);
extern void cr_glBindProgramNV(GLenum target, GLuint id);
extern void cr_glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
extern void cr_glBindTexture(GLenum target, GLuint texture);
extern void cr_glBindTextureEXT(GLenum target, GLuint texture);
extern void cr_glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
extern void cr_glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
extern void cr_glBlendColorEXT(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
extern void cr_glBlendEquation(GLenum mode);
extern void cr_glBlendEquationEXT(GLenum mode);
extern void cr_glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
extern void cr_glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
extern void cr_glBlendFunc(GLenum sfactor, GLenum dfactor);
extern void cr_glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
extern void cr_glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorA, GLenum dfactorA);
extern void cr_glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void cr_glBufferData(GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
extern void cr_glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);
extern void cr_glBufferSubData(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
extern void cr_glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);
extern void cr_glCallList(GLuint list);
extern void cr_glCallLists(GLsizei n, GLenum type, const GLvoid * lists);
extern GLenum cr_glCheckFramebufferStatusEXT(GLenum target);
extern void cr_glChromiumParameterfCR(GLenum target, GLfloat value);
extern void cr_glChromiumParameteriCR(GLenum target, GLint value);
extern void cr_glChromiumParametervCR(GLenum target, GLenum type, GLsizei count, const GLvoid * values);
extern void cr_glClear(GLbitfield mask);
extern void cr_glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void cr_glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
extern void cr_glClearDepth(GLclampd depth);
extern void cr_glClearIndex(GLfloat c);
extern void cr_glClearStencil(GLint s);
extern void cr_glClientActiveTexture(GLenum texture);
extern void cr_glClientActiveTextureARB(GLenum texture);
extern void cr_glClipPlane(GLenum plane, const GLdouble * equation);
extern void cr_glColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern void cr_glColor3bv(const GLbyte * v);
extern void cr_glColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern void cr_glColor3dv(const GLdouble * v);
extern void cr_glColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern void cr_glColor3fv(const GLfloat * v);
extern void cr_glColor3i(GLint red, GLint green, GLint blue);
extern void cr_glColor3iv(const GLint * v);
extern void cr_glColor3s(GLshort red, GLshort green, GLshort blue);
extern void cr_glColor3sv(const GLshort * v);
extern void cr_glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern void cr_glColor3ubv(const GLubyte * v);
extern void cr_glColor3ui(GLuint red, GLuint green, GLuint blue);
extern void cr_glColor3uiv(const GLuint * v);
extern void cr_glColor3us(GLushort red, GLushort green, GLushort blue);
extern void cr_glColor3usv(const GLushort * v);
extern void cr_glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
extern void cr_glColor4bv(const GLbyte * v);
extern void cr_glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
extern void cr_glColor4dv(const GLdouble * v);
extern void cr_glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void cr_glColor4fv(const GLfloat * v);
extern void cr_glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
extern void cr_glColor4iv(const GLint * v);
extern void cr_glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
extern void cr_glColor4sv(const GLshort * v);
extern void cr_glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
extern void cr_glColor4ubv(const GLubyte * v);
extern void cr_glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern void cr_glColor4uiv(const GLuint * v);
extern void cr_glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
extern void cr_glColor4usv(const GLushort * v);
extern void cr_glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern void cr_glColorMaterial(GLenum face, GLenum mode);
extern void cr_glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data);
extern void cr_glColorTable(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);
extern void cr_glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params);
extern void cr_glColorTableParameteriv(GLenum target, GLenum pname, const GLint * params);
extern void cr_glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern void cr_glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
extern void cr_glCombinerParameterfNV(GLenum pname, GLfloat param);
extern void cr_glCombinerParameterfvNV(GLenum pname, const GLfloat * params);
extern void cr_glCombinerParameteriNV(GLenum pname, GLint param);
extern void cr_glCombinerParameterivNV(GLenum pname, const GLint * params);
extern void cr_glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params);
extern void cr_glCompileShader(GLuint shader);
extern void cr_glCompileShaderARB(VBoxGLhandleARB shaderObj);
extern void cr_glCompressedTexImage1D(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLint border, GLsizei imagesize, const GLvoid * data);
extern void cr_glCompressedTexImage2D(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLint border, GLsizei imagesize, const GLvoid * data);
extern void cr_glCompressedTexImage3D(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imagesize, const GLvoid * data);
extern void cr_glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imagesize, const GLvoid * data);
extern void cr_glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imagesize, const GLvoid * data);
extern void cr_glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data);
extern void cr_glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imagesize, const GLvoid * data);
extern void cr_glConvolutionFilter1D(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * image);
extern void cr_glConvolutionFilter2D(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image);
extern void cr_glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
extern void cr_glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params);
extern void cr_glConvolutionParameteri(GLenum target, GLenum pname, GLint params);
extern void cr_glConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params);
extern void cr_glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern void cr_glCopyColorTable(GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
extern void cr_glCopyConvolutionFilter1D(GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width);
extern void cr_glCopyConvolutionFilter2D(GLenum target, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
extern void cr_glCopyTexImage1D(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
extern void cr_glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
extern void cr_glCopyTexImage2D(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void cr_glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void cr_glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void cr_glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void cr_glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern GLuint cr_glCreateProgram(void);
extern VBoxGLhandleARB cr_glCreateProgramObjectARB(void);
extern GLuint cr_glCreateShader(GLenum type);
extern VBoxGLhandleARB cr_glCreateShaderObjectARB(GLenum shaderType);
extern void cr_glCullFace(GLenum mode);
extern void cr_glDeleteBuffers(GLsizei n, const GLuint * buffer);
extern void cr_glDeleteBuffersARB(GLsizei n, const GLuint * buffer);
extern void cr_glDeleteFencesNV(GLsizei n, const GLuint * fences);
extern void cr_glDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers);
extern void cr_glDeleteLists(GLuint list, GLsizei range);
extern void cr_glDeleteObjectARB(VBoxGLhandleARB obj);
extern void cr_glDeleteProgram(GLuint program);
extern void cr_glDeleteProgramsARB(GLsizei n, const GLuint * programs);
extern void cr_glDeleteProgramsNV(GLsizei n, const GLuint * ids);
extern void cr_glDeleteQueriesARB(GLsizei n, const GLuint * ids);
extern void cr_glDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers);
extern void cr_glDeleteShader(GLuint shader);
extern void cr_glDeleteTextures(GLsizei n, const GLuint * textures);
extern void cr_glDeleteTexturesEXT(GLsizei n, const GLuint * textures);
extern void cr_glDepthFunc(GLenum func);
extern void cr_glDepthMask(GLboolean flag);
extern void cr_glDepthRange(GLclampd zNear, GLclampd zFar);
extern void cr_glDetachObjectARB(VBoxGLhandleARB containerObj, VBoxGLhandleARB attachedObj);
extern void cr_glDetachShader(GLuint program, GLuint shader);
extern void cr_glDisable(GLenum cap);
extern void cr_glDisableClientState(GLenum array);
extern void cr_glDisableVertexAttribArray(GLuint index);
extern void cr_glDisableVertexAttribArrayARB(GLuint index);
extern void cr_glDrawArrays(GLenum mode, GLint first, GLsizei count);
extern void cr_glDrawBuffer(GLenum mode);
extern void cr_glDrawBuffers(GLsizei n, const GLenum* bufs);
extern void cr_glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices);
extern void cr_glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);
extern void cr_glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);
extern void cr_glEdgeFlag(GLboolean flag);
extern void cr_glEdgeFlagPointer(GLsizei stride, const GLvoid * pointer);
extern void cr_glEdgeFlagv(const GLboolean * flag);
extern void cr_glEnable(GLenum cap);
extern void cr_glEnableClientState(GLenum array);
extern void cr_glEnableVertexAttribArray(GLuint index);
extern void cr_glEnableVertexAttribArrayARB(GLuint index);
extern void cr_glEnd(void);
extern void cr_glEndList(void);
extern void cr_glEndQueryARB(GLenum target);
extern void cr_glEvalCoord1d(GLdouble u);
extern void cr_glEvalCoord1dv(const GLdouble * u);
extern void cr_glEvalCoord1f(GLfloat u);
extern void cr_glEvalCoord1fv(const GLfloat * u);
extern void cr_glEvalCoord2d(GLdouble u, GLdouble v);
extern void cr_glEvalCoord2dv(const GLdouble * u);
extern void cr_glEvalCoord2f(GLfloat u, GLfloat v);
extern void cr_glEvalCoord2fv(const GLfloat * u);
extern void cr_glEvalMesh1(GLenum mode, GLint i1, GLint i2);
extern void cr_glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
extern void cr_glEvalPoint1(GLint i);
extern void cr_glEvalPoint2(GLint i, GLint j);
extern void cr_glExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params);
extern void cr_glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
extern void cr_glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern void cr_glFinish(void);
extern void cr_glFinishFenceNV(GLuint fence);
extern void cr_glFlush(void);
extern void cr_glFlushVertexArrayRangeNV(void);
extern void cr_glFogCoordPointer(GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glFogCoordPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glFogCoordd(GLdouble coord);
extern void cr_glFogCoorddEXT(GLdouble coord);
extern void cr_glFogCoorddv(const GLdouble * coord);
extern void cr_glFogCoorddvEXT(const GLdouble * coord);
extern void cr_glFogCoordf(GLfloat coord);
extern void cr_glFogCoordfEXT(GLfloat coord);
extern void cr_glFogCoordfv(const GLfloat * coord);
extern void cr_glFogCoordfvEXT(const GLfloat * coord);
extern void cr_glFogf(GLenum pname, GLfloat param);
extern void cr_glFogfv(GLenum pname, const GLfloat * params);
extern void cr_glFogi(GLenum pname, GLint param);
extern void cr_glFogiv(GLenum pname, const GLint * params);
extern void cr_glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void cr_glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void cr_glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void cr_glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void cr_glFrontFace(GLenum mode);
extern void cr_glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void cr_glGenBuffers(GLsizei n, GLuint * buffer);
extern void cr_glGenBuffersARB(GLsizei n, GLuint * buffer);
extern void cr_glGenFencesNV(GLsizei n, GLuint * fences);
extern void cr_glGenFramebuffersEXT(GLsizei n, GLuint * framebuffers);
extern GLuint cr_glGenLists(GLsizei range);
extern void cr_glGenProgramsARB(GLsizei n, GLuint * programs);
extern void cr_glGenProgramsNV(GLsizei n, GLuint * ids);
extern void cr_glGenQueriesARB(GLsizei n, GLuint * ids);
extern void cr_glGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers);
extern void cr_glGenTextures(GLsizei n, GLuint * textures);
extern void cr_glGenTexturesEXT(GLsizei n, GLuint * textures);
extern void cr_glGenerateMipmapEXT(GLenum target);
extern void cr_glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name);
extern void cr_glGetActiveAttribARB(VBoxGLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
extern void cr_glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, char * name);
extern void cr_glGetActiveUniformARB(VBoxGLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
extern void cr_glGetAttachedObjectsARB(VBoxGLhandleARB containerObj, GLsizei maxCount, GLsizei * count, VBoxGLhandleARB * obj);
extern void cr_glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
extern GLint cr_glGetAttribLocation(GLuint program, const char * name);
extern GLint cr_glGetAttribLocationARB(VBoxGLhandleARB programObj, const GLcharARB * name);
extern void cr_glGetBooleanv(GLenum pname, GLboolean * params);
extern void cr_glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetBufferPointerv(GLenum target, GLenum pname, GLvoid ** params);
extern void cr_glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid ** params);
extern void cr_glGetBufferSubData(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
extern void cr_glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
extern void cr_glGetChromiumParametervCR(GLenum target, GLuint index, GLenum type, GLsizei count, GLvoid * values);
extern void cr_glGetClipPlane(GLenum plane, GLdouble * equation);
extern void cr_glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid * table);
extern void cr_glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
extern void cr_glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
extern void cr_glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
extern void cr_glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params);
extern void cr_glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params);
extern void cr_glGetCompressedTexImage(GLenum target, GLint level, GLvoid * img);
extern void cr_glGetCompressedTexImageARB(GLenum target, GLint level, GLvoid * img);
extern void cr_glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid * image);
extern void cr_glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetDoublev(GLenum pname, GLdouble * params);
extern GLenum cr_glGetError(void);
extern void cr_glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
extern void cr_glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params);
extern void cr_glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params);
extern void cr_glGetFloatv(GLenum pname, GLfloat * params);
extern void cr_glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params);
extern VBoxGLhandleARB cr_glGetHandleARB(GLenum pname);
extern void cr_glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);
extern void cr_glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetInfoLogARB(VBoxGLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
extern void cr_glGetIntegerv(GLenum pname, GLint * params);
extern void cr_glGetLightfv(GLenum light, GLenum pname, GLfloat * params);
extern void cr_glGetLightiv(GLenum light, GLenum pname, GLint * params);
extern void cr_glGetMapdv(GLenum target, GLenum query, GLdouble * v);
extern void cr_glGetMapfv(GLenum target, GLenum query, GLfloat * v);
extern void cr_glGetMapiv(GLenum target, GLenum query, GLint * v);
extern void cr_glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params);
extern void cr_glGetMaterialiv(GLenum face, GLenum pname, GLint * params);
extern void cr_glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);
extern void cr_glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetObjectParameterfvARB(VBoxGLhandleARB obj, GLenum pname, GLfloat * params);
extern void cr_glGetObjectParameterivARB(VBoxGLhandleARB obj, GLenum pname, GLint * params);
extern void cr_glGetPixelMapfv(GLenum map, GLfloat * values);
extern void cr_glGetPixelMapuiv(GLenum map, GLuint * values);
extern void cr_glGetPixelMapusv(GLenum map, GLushort * values);
extern void cr_glGetPointerv(GLenum pname, GLvoid ** params);
extern void cr_glGetPolygonStipple(GLubyte * mask);
extern void cr_glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params);
extern void cr_glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params);
extern void cr_glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, char * infoLog);
extern void cr_glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params);
extern void cr_glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params);
extern void cr_glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
extern void cr_glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
extern void cr_glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params);
extern void cr_glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
extern void cr_glGetProgramStringARB(GLenum target, GLenum pname, GLvoid * string);
extern void cr_glGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program);
extern void cr_glGetProgramiv(GLuint program, GLenum pname, GLint * params);
extern void cr_glGetProgramivARB(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetProgramivNV(GLuint id, GLenum pname, GLint * params);
extern void cr_glGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params);
extern void cr_glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params);
extern void cr_glGetQueryivARB(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span);
extern void cr_glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, char * infoLog);
extern void cr_glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, char * source);
extern void cr_glGetShaderSourceARB(VBoxGLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
extern void cr_glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
extern const GLubyte * cr_glGetString(GLenum name);
extern void cr_glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetTexEnviv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
extern void cr_glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
extern void cr_glGetTexGeniv(GLenum coord, GLenum pname, GLint * params);
extern void cr_glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels);
extern void cr_glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
extern void cr_glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
extern void cr_glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
extern void cr_glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
extern void cr_glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params);
extern GLint cr_glGetUniformLocation(GLuint program, const char * name);
extern GLint cr_glGetUniformLocationARB(VBoxGLhandleARB programObj, const GLcharARB * name);
extern void cr_glGetUniformfv(GLuint program, GLint location, GLfloat * params);
extern void cr_glGetUniformfvARB(VBoxGLhandleARB programObj, GLint location, GLfloat * params);
extern void cr_glGetUniformiv(GLuint program, GLint location, GLint * params);
extern void cr_glGetUniformivARB(VBoxGLhandleARB programObj, GLint location, GLint * params);
extern void cr_glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid ** pointer);
extern void cr_glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid ** pointer);
extern void cr_glGetVertexAttribPointervNV(GLuint index, GLenum pname, GLvoid ** pointer);
extern void cr_glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params);
extern void cr_glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params);
extern void cr_glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params);
extern void cr_glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
extern void cr_glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params);
extern void cr_glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params);
extern void cr_glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
extern void cr_glGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params);
extern void cr_glGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params);
extern void cr_glHint(GLenum target, GLenum mode);
extern void cr_glHistogram(GLenum target, GLsizei width, GLenum internalFormat, GLboolean sink);
extern void cr_glIndexMask(GLuint mask);
extern void cr_glIndexPointer(GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glIndexd(GLdouble c);
extern void cr_glIndexdv(const GLdouble * c);
extern void cr_glIndexf(GLfloat c);
extern void cr_glIndexfv(const GLfloat * c);
extern void cr_glIndexi(GLint c);
extern void cr_glIndexiv(const GLint * c);
extern void cr_glIndexs(GLshort c);
extern void cr_glIndexsv(const GLshort * c);
extern void cr_glIndexub(GLubyte c);
extern void cr_glIndexubv(const GLubyte * c);
extern void cr_glInitNames(void);
extern void cr_glInterleavedArrays(GLenum format, GLsizei stride, const GLvoid * pointer);
extern GLboolean cr_glIsBuffer(GLuint buffer);
extern GLboolean cr_glIsBufferARB(GLuint buffer);
extern GLboolean cr_glIsEnabled(GLenum cap);
extern GLboolean cr_glIsFenceNV(GLuint fence);
extern GLboolean cr_glIsFramebufferEXT(GLuint framebuffer);
extern GLboolean cr_glIsList(GLuint list);
extern GLboolean cr_glIsProgram(GLuint program);
extern GLboolean cr_glIsProgramARB(GLuint program);
extern GLboolean cr_glIsProgramNV(GLuint id);
extern GLboolean cr_glIsQueryARB(GLuint id);
extern GLboolean cr_glIsRenderbufferEXT(GLuint renderbuffer);
extern GLboolean cr_glIsShader(GLuint shader);
extern GLboolean cr_glIsTexture(GLuint texture);
extern GLboolean cr_glIsTextureEXT(GLuint texture);
extern void cr_glLightModelf(GLenum pname, GLfloat param);
extern void cr_glLightModelfv(GLenum pname, const GLfloat * params);
extern void cr_glLightModeli(GLenum pname, GLint param);
extern void cr_glLightModeliv(GLenum pname, const GLint * params);
extern void cr_glLightf(GLenum light, GLenum pname, GLfloat param);
extern void cr_glLightfv(GLenum light, GLenum pname, const GLfloat * params);
extern void cr_glLighti(GLenum light, GLenum pname, GLint param);
extern void cr_glLightiv(GLenum light, GLenum pname, const GLint * params);
extern void cr_glLineStipple(GLint factor, GLushort pattern);
extern void cr_glLineWidth(GLfloat width);
extern void cr_glLinkProgram(GLuint program);
extern void cr_glLinkProgramARB(VBoxGLhandleARB programObj);
extern void cr_glListBase(GLuint base);
extern void cr_glLoadIdentity(void);
extern void cr_glLoadMatrixd(const GLdouble * m);
extern void cr_glLoadMatrixf(const GLfloat * m);
extern void cr_glLoadName(GLuint name);
extern void cr_glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
extern void cr_glLoadTransposeMatrixd(const GLdouble * m);
extern void cr_glLoadTransposeMatrixdARB(const GLdouble * m);
extern void cr_glLoadTransposeMatrixf(const GLfloat * m);
extern void cr_glLoadTransposeMatrixfARB(const GLfloat * m);
extern void cr_glLockArraysEXT(GLint first, GLint count);
extern void cr_glLogicOp(GLenum opcode);
extern void cr_glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
extern void cr_glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
extern void cr_glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
extern void cr_glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
extern void * cr_glMapBuffer(GLenum target, GLenum access);
extern void * cr_glMapBufferARB(GLenum target, GLenum access);
extern void cr_glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
extern void cr_glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
extern void cr_glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
extern void cr_glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
extern void cr_glMaterialf(GLenum face, GLenum pname, GLfloat param);
extern void cr_glMaterialfv(GLenum face, GLenum pname, const GLfloat * params);
extern void cr_glMateriali(GLenum face, GLenum pname, GLint param);
extern void cr_glMaterialiv(GLenum face, GLenum pname, const GLint * params);
extern void cr_glMatrixMode(GLenum mode);
extern void cr_glMinmax(GLenum target, GLenum internalFormat, GLboolean sink);
extern void cr_glMultMatrixd(const GLdouble * m);
extern void cr_glMultMatrixf(const GLfloat * m);
extern void cr_glMultTransposeMatrixd(const GLdouble * m);
extern void cr_glMultTransposeMatrixdARB(const GLdouble * m);
extern void cr_glMultTransposeMatrixf(const GLfloat * m);
extern void cr_glMultTransposeMatrixfARB(const GLfloat * m);
extern void cr_glMultiDrawArrays(GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);
extern void cr_glMultiDrawArraysEXT(GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);
extern void cr_glMultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const GLvoid ** indices, GLsizei primcount);
extern void cr_glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const GLvoid ** indices, GLsizei primcount);
extern void cr_glMultiTexCoord1d(GLenum texture, GLdouble s);
extern void cr_glMultiTexCoord1dARB(GLenum texture, GLdouble s);
extern void cr_glMultiTexCoord1dv(GLenum texture, const GLdouble * v);
extern void cr_glMultiTexCoord1dvARB(GLenum texture, const GLdouble * t);
extern void cr_glMultiTexCoord1f(GLenum texture, GLfloat s);
extern void cr_glMultiTexCoord1fARB(GLenum texture, GLfloat s);
extern void cr_glMultiTexCoord1fv(GLenum texture, const GLfloat * v);
extern void cr_glMultiTexCoord1fvARB(GLenum texture, const GLfloat * t);
extern void cr_glMultiTexCoord1i(GLenum texture, GLint s);
extern void cr_glMultiTexCoord1iARB(GLenum texture, GLint s);
extern void cr_glMultiTexCoord1iv(GLenum texture, const GLint * v);
extern void cr_glMultiTexCoord1ivARB(GLenum texture, const GLint * t);
extern void cr_glMultiTexCoord1s(GLenum texture, GLshort s);
extern void cr_glMultiTexCoord1sARB(GLenum texture, GLshort s);
extern void cr_glMultiTexCoord1sv(GLenum texture, const GLshort * v);
extern void cr_glMultiTexCoord1svARB(GLenum texture, const GLshort * t);
extern void cr_glMultiTexCoord2d(GLenum texture, GLdouble s, GLdouble t);
extern void cr_glMultiTexCoord2dARB(GLenum texture, GLdouble s, GLdouble t);
extern void cr_glMultiTexCoord2dv(GLenum texture, const GLdouble * v);
extern void cr_glMultiTexCoord2dvARB(GLenum texture, const GLdouble * t);
extern void cr_glMultiTexCoord2f(GLenum texture, GLfloat s, GLfloat t);
extern void cr_glMultiTexCoord2fARB(GLenum texture, GLfloat s, GLfloat t);
extern void cr_glMultiTexCoord2fv(GLenum texture, const GLfloat * v);
extern void cr_glMultiTexCoord2fvARB(GLenum texture, const GLfloat * t);
extern void cr_glMultiTexCoord2i(GLenum texture, GLint s, GLint t);
extern void cr_glMultiTexCoord2iARB(GLenum texture, GLint s, GLint t);
extern void cr_glMultiTexCoord2iv(GLenum texture, const GLint * v);
extern void cr_glMultiTexCoord2ivARB(GLenum texture, const GLint * t);
extern void cr_glMultiTexCoord2s(GLenum texture, GLshort s, GLshort t);
extern void cr_glMultiTexCoord2sARB(GLenum texture, GLshort s, GLshort t);
extern void cr_glMultiTexCoord2sv(GLenum texture, const GLshort * v);
extern void cr_glMultiTexCoord2svARB(GLenum texture, const GLshort * t);
extern void cr_glMultiTexCoord3d(GLenum texture, GLdouble s, GLdouble t, GLdouble r);
extern void cr_glMultiTexCoord3dARB(GLenum texture, GLdouble s, GLdouble t, GLdouble r);
extern void cr_glMultiTexCoord3dv(GLenum texture, const GLdouble * v);
extern void cr_glMultiTexCoord3dvARB(GLenum texture, const GLdouble * t);
extern void cr_glMultiTexCoord3f(GLenum texture, GLfloat s, GLfloat t, GLfloat r);
extern void cr_glMultiTexCoord3fARB(GLenum texture, GLfloat s, GLfloat t, GLfloat r);
extern void cr_glMultiTexCoord3fv(GLenum texture, const GLfloat * v);
extern void cr_glMultiTexCoord3fvARB(GLenum texture, const GLfloat * t);
extern void cr_glMultiTexCoord3i(GLenum texture, GLint s, GLint t, GLint r);
extern void cr_glMultiTexCoord3iARB(GLenum texture, GLint s, GLint t, GLint r);
extern void cr_glMultiTexCoord3iv(GLenum texture, const GLint * v);
extern void cr_glMultiTexCoord3ivARB(GLenum texture, const GLint * t);
extern void cr_glMultiTexCoord3s(GLenum texture, GLshort s, GLshort t, GLshort r);
extern void cr_glMultiTexCoord3sARB(GLenum texture, GLshort s, GLshort t, GLshort r);
extern void cr_glMultiTexCoord3sv(GLenum texture, const GLshort * v);
extern void cr_glMultiTexCoord3svARB(GLenum texture, const GLshort * t);
extern void cr_glMultiTexCoord4d(GLenum texture, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void cr_glMultiTexCoord4dARB(GLenum texture, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void cr_glMultiTexCoord4dv(GLenum texture, const GLdouble * v);
extern void cr_glMultiTexCoord4dvARB(GLenum texture, const GLdouble * t);
extern void cr_glMultiTexCoord4f(GLenum texture, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void cr_glMultiTexCoord4fARB(GLenum texture, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void cr_glMultiTexCoord4fv(GLenum texture, const GLfloat * v);
extern void cr_glMultiTexCoord4fvARB(GLenum texture, const GLfloat * t);
extern void cr_glMultiTexCoord4i(GLenum texture, GLint s, GLint t, GLint r, GLint q);
extern void cr_glMultiTexCoord4iARB(GLenum texture, GLint s, GLint t, GLint r, GLint q);
extern void cr_glMultiTexCoord4iv(GLenum texture, const GLint * v);
extern void cr_glMultiTexCoord4ivARB(GLenum texture, const GLint * t);
extern void cr_glMultiTexCoord4s(GLenum texture, GLshort s, GLshort t, GLshort r, GLshort q);
extern void cr_glMultiTexCoord4sARB(GLenum texture, GLshort s, GLshort t, GLshort r, GLshort q);
extern void cr_glMultiTexCoord4sv(GLenum texture, const GLshort * v);
extern void cr_glMultiTexCoord4svARB(GLenum texture, const GLshort * t);
extern void cr_glNewList(GLuint list, GLenum mode);
extern void cr_glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
extern void cr_glNormal3bv(const GLbyte * v);
extern void cr_glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
extern void cr_glNormal3dv(const GLdouble * v);
extern void cr_glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
extern void cr_glNormal3fv(const GLfloat * v);
extern void cr_glNormal3i(GLint nx, GLint ny, GLint nz);
extern void cr_glNormal3iv(const GLint * v);
extern void cr_glNormal3s(GLshort nx, GLshort ny, GLshort nz);
extern void cr_glNormal3sv(const GLshort * v);
extern void cr_glNormalPointer(GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void cr_glPassThrough(GLfloat token);
extern void cr_glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
extern void cr_glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
extern void cr_glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
extern void cr_glPixelStoref(GLenum pname, GLfloat param);
extern void cr_glPixelStorei(GLenum pname, GLint param);
extern void cr_glPixelTransferf(GLenum pname, GLfloat param);
extern void cr_glPixelTransferi(GLenum pname, GLint param);
extern void cr_glPixelZoom(GLfloat xfactor, GLfloat yfactor);
extern void cr_glPointParameterf(GLenum pname, GLfloat param);
extern void cr_glPointParameterfARB(GLenum pname, GLfloat param);
extern void cr_glPointParameterfEXT(GLenum pname, GLfloat param);
extern void cr_glPointParameterfv(GLenum pname, const GLfloat * params);
extern void cr_glPointParameterfvARB(GLenum pname, const GLfloat * params);
extern void cr_glPointParameterfvEXT(GLenum pname, const GLfloat * params);
extern void cr_glPointParameteri(GLenum pname, GLint param);
extern void cr_glPointParameteriNV(GLenum pname, GLint params);
extern void cr_glPointParameteriv(GLenum pname, const GLint * param);
extern void cr_glPointParameterivNV(GLenum pname, const GLint * params);
extern void cr_glPointSize(GLfloat size);
extern void cr_glPolygonMode(GLenum face, GLenum mode);
extern void cr_glPolygonOffset(GLfloat factor, GLfloat units);
extern void cr_glPolygonStipple(const GLubyte * mask);
extern void cr_glPopAttrib(void);
extern void cr_glPopClientAttrib(void);
extern void cr_glPopMatrix(void);
extern void cr_glPopName(void);
extern void cr_glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLclampf * priorities);
extern void cr_glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities);
extern void cr_glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
extern void cr_glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
extern void cr_glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
extern void cr_glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
extern void cr_glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
extern void cr_glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
extern void cr_glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * params);
extern void cr_glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * params);
extern void cr_glProgramParameters4dvNV(GLenum target, GLuint index, GLuint num, const GLdouble * params);
extern void cr_glProgramParameters4fvNV(GLenum target, GLuint index, GLuint num, const GLfloat * params);
extern void cr_glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid * string);
extern void cr_glPushAttrib(GLbitfield mask);
extern void cr_glPushClientAttrib(GLbitfield mask);
extern void cr_glPushMatrix(void);
extern void cr_glPushName(GLuint name);
extern void cr_glRasterPos2d(GLdouble x, GLdouble y);
extern void cr_glRasterPos2dv(const GLdouble * v);
extern void cr_glRasterPos2f(GLfloat x, GLfloat y);
extern void cr_glRasterPos2fv(const GLfloat * v);
extern void cr_glRasterPos2i(GLint x, GLint y);
extern void cr_glRasterPos2iv(const GLint * v);
extern void cr_glRasterPos2s(GLshort x, GLshort y);
extern void cr_glRasterPos2sv(const GLshort * v);
extern void cr_glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glRasterPos3dv(const GLdouble * v);
extern void cr_glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glRasterPos3fv(const GLfloat * v);
extern void cr_glRasterPos3i(GLint x, GLint y, GLint z);
extern void cr_glRasterPos3iv(const GLint * v);
extern void cr_glRasterPos3s(GLshort x, GLshort y, GLshort z);
extern void cr_glRasterPos3sv(const GLshort * v);
extern void cr_glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glRasterPos4dv(const GLdouble * v);
extern void cr_glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glRasterPos4fv(const GLfloat * v);
extern void cr_glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
extern void cr_glRasterPos4iv(const GLint * v);
extern void cr_glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern void cr_glRasterPos4sv(const GLshort * v);
extern void cr_glReadBuffer(GLenum mode);
extern void cr_glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels);
extern void cr_glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
extern void cr_glRectdv(const GLdouble * v1, const GLdouble * v2);
extern void cr_glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
extern void cr_glRectfv(const GLfloat * v1, const GLfloat * v2);
extern void cr_glRecti(GLint x1, GLint y1, GLint x2, GLint y2);
extern void cr_glRectiv(const GLint * v1, const GLint * v2);
extern void cr_glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
extern void cr_glRectsv(const GLshort * v1, const GLshort * v2);
extern GLint cr_glRenderMode(GLenum mode);
extern void cr_glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void cr_glRequestResidentProgramsNV(GLsizei n, const GLuint * ids);
extern void cr_glResetHistogram(GLenum target);
extern void cr_glResetMinmax(GLenum target);
extern void cr_glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern void cr_glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern void cr_glSampleCoverage(GLclampf value, GLboolean invert);
extern void cr_glSampleCoverageARB(GLclampf value, GLboolean invert);
extern void cr_glSampleMaskEXT(GLclampf value, GLboolean invert);
extern void cr_glSamplePatternEXT(GLenum pattern);
extern void cr_glScaled(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glScalef(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern void cr_glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
extern void cr_glSecondaryColor3bv(const GLbyte * v);
extern void cr_glSecondaryColor3bvEXT(const GLbyte * v);
extern void cr_glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern void cr_glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
extern void cr_glSecondaryColor3dv(const GLdouble * v);
extern void cr_glSecondaryColor3dvEXT(const GLdouble * v);
extern void cr_glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern void cr_glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
extern void cr_glSecondaryColor3fv(const GLfloat * v);
extern void cr_glSecondaryColor3fvEXT(const GLfloat * v);
extern void cr_glSecondaryColor3i(GLint red, GLint green, GLint blue);
extern void cr_glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
extern void cr_glSecondaryColor3iv(const GLint * v);
extern void cr_glSecondaryColor3ivEXT(const GLint * v);
extern void cr_glSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
extern void cr_glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
extern void cr_glSecondaryColor3sv(const GLshort * v);
extern void cr_glSecondaryColor3svEXT(const GLshort * v);
extern void cr_glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern void cr_glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
extern void cr_glSecondaryColor3ubv(const GLubyte * v);
extern void cr_glSecondaryColor3ubvEXT(const GLubyte * v);
extern void cr_glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
extern void cr_glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
extern void cr_glSecondaryColor3uiv(const GLuint * v);
extern void cr_glSecondaryColor3uivEXT(const GLuint * v);
extern void cr_glSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
extern void cr_glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
extern void cr_glSecondaryColor3usv(const GLushort * v);
extern void cr_glSecondaryColor3usvEXT(const GLushort * v);
extern void cr_glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glSelectBuffer(GLsizei size, GLuint * buffer);
extern void cr_glSemaphoreCreateCR(GLuint name, GLuint count);
extern void cr_glSemaphoreDestroyCR(GLuint name);
extern void cr_glSemaphorePCR(GLuint name);
extern void cr_glSemaphoreVCR(GLuint name);
extern void cr_glSeparableFilter2D(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column);
extern void cr_glSetFenceNV(GLuint fence, GLenum condition);
extern void cr_glShadeModel(GLenum mode);
extern void cr_glShaderSource(GLuint shader, GLsizei count, const char ** string, const GLint * length);
extern void cr_glShaderSourceARB(VBoxGLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
extern void cr_glStencilFunc(GLenum func, GLint ref, GLuint mask);
extern void cr_glStencilFuncSeparate(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
extern void cr_glStencilMask(GLuint mask);
extern void cr_glStencilMaskSeparate(GLenum face, GLuint mask);
extern void cr_glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
extern void cr_glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
extern void cr_glStringMarkerGREMEDY(GLsizei len, const GLvoid* string);
extern GLboolean cr_glTestFenceNV(GLuint fence);
extern void cr_glTexCoord1d(GLdouble s);
extern void cr_glTexCoord1dv(const GLdouble * v);
extern void cr_glTexCoord1f(GLfloat s);
extern void cr_glTexCoord1fv(const GLfloat * v);
extern void cr_glTexCoord1i(GLint s);
extern void cr_glTexCoord1iv(const GLint * v);
extern void cr_glTexCoord1s(GLshort s);
extern void cr_glTexCoord1sv(const GLshort * v);
extern void cr_glTexCoord2d(GLdouble s, GLdouble t);
extern void cr_glTexCoord2dv(const GLdouble * v);
extern void cr_glTexCoord2f(GLfloat s, GLfloat t);
extern void cr_glTexCoord2fv(const GLfloat * v);
extern void cr_glTexCoord2i(GLint s, GLint t);
extern void cr_glTexCoord2iv(const GLint * v);
extern void cr_glTexCoord2s(GLshort s, GLshort t);
extern void cr_glTexCoord2sv(const GLshort * v);
extern void cr_glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
extern void cr_glTexCoord3dv(const GLdouble * v);
extern void cr_glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
extern void cr_glTexCoord3fv(const GLfloat * v);
extern void cr_glTexCoord3i(GLint s, GLint t, GLint r);
extern void cr_glTexCoord3iv(const GLint * v);
extern void cr_glTexCoord3s(GLshort s, GLshort t, GLshort r);
extern void cr_glTexCoord3sv(const GLshort * v);
extern void cr_glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void cr_glTexCoord4dv(const GLdouble * v);
extern void cr_glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void cr_glTexCoord4fv(const GLfloat * v);
extern void cr_glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
extern void cr_glTexCoord4iv(const GLint * v);
extern void cr_glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
extern void cr_glTexCoord4sv(const GLshort * v);
extern void cr_glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glTexEnvf(GLenum target, GLenum pname, GLfloat param);
extern void cr_glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params);
extern void cr_glTexEnvi(GLenum target, GLenum pname, GLint param);
extern void cr_glTexEnviv(GLenum target, GLenum pname, const GLint * params);
extern void cr_glTexGend(GLenum coord, GLenum pname, GLdouble param);
extern void cr_glTexGendv(GLenum coord, GLenum pname, const GLdouble * params);
extern void cr_glTexGenf(GLenum coord, GLenum pname, GLfloat param);
extern void cr_glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
extern void cr_glTexGeni(GLenum coord, GLenum pname, GLint param);
extern void cr_glTexGeniv(GLenum coord, GLenum pname, const GLint * params);
extern void cr_glTexImage1D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexImage2D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexImage3DEXT(GLenum target, GLint level, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexParameterf(GLenum target, GLenum pname, GLfloat param);
extern void cr_glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
extern void cr_glTexParameteri(GLenum target, GLenum pname, GLint param);
extern void cr_glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
extern void cr_glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);
extern void cr_glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
extern void cr_glTranslated(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glTranslatef(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glUniform1f(GLint location, GLfloat v0);
extern void cr_glUniform1fARB(GLint location, GLfloat v0);
extern void cr_glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform1fvARB(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform1i(GLint location, GLint v0);
extern void cr_glUniform1iARB(GLint location, GLint v0);
extern void cr_glUniform1iv(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform1ivARB(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform2f(GLint location, GLfloat v0, GLfloat v1);
extern void cr_glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
extern void cr_glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform2fvARB(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform2i(GLint location, GLint v0, GLint v1);
extern void cr_glUniform2iARB(GLint location, GLint v0, GLint v1);
extern void cr_glUniform2iv(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform2ivARB(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void cr_glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void cr_glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform3fvARB(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
extern void cr_glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
extern void cr_glUniform3iv(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform3ivARB(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void cr_glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void cr_glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform4fvARB(GLint location, GLsizei count, const GLfloat * value);
extern void cr_glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void cr_glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void cr_glUniform4iv(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniform4ivARB(GLint location, GLsizei count, const GLint * value);
extern void cr_glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
extern void cr_glUnlockArraysEXT(void);
extern GLboolean cr_glUnmapBuffer(GLenum target);
extern GLboolean cr_glUnmapBufferARB(GLenum target);
extern void cr_glUseProgram(GLuint program);
extern void cr_glUseProgramObjectARB(VBoxGLhandleARB programObj);
extern void cr_glValidateProgram(GLuint program);
extern void cr_glValidateProgramARB(VBoxGLhandleARB programObj);
extern void cr_glVertex2d(GLdouble x, GLdouble y);
extern void cr_glVertex2dv(const GLdouble * v);
extern void cr_glVertex2f(GLfloat x, GLfloat y);
extern void cr_glVertex2fv(const GLfloat * v);
extern void cr_glVertex2i(GLint x, GLint y);
extern void cr_glVertex2iv(const GLint * v);
extern void cr_glVertex2s(GLshort x, GLshort y);
extern void cr_glVertex2sv(const GLshort * v);
extern void cr_glVertex3d(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glVertex3dv(const GLdouble * v);
extern void cr_glVertex3f(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glVertex3fv(const GLfloat * v);
extern void cr_glVertex3i(GLint x, GLint y, GLint z);
extern void cr_glVertex3iv(const GLint * v);
extern void cr_glVertex3s(GLshort x, GLshort y, GLshort z);
extern void cr_glVertex3sv(const GLshort * v);
extern void cr_glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glVertex4dv(const GLdouble * v);
extern void cr_glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glVertex4fv(const GLfloat * v);
extern void cr_glVertex4i(GLint x, GLint y, GLint z, GLint w);
extern void cr_glVertex4iv(const GLint * v);
extern void cr_glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern void cr_glVertex4sv(const GLshort * v);
extern void cr_glVertexArrayRangeNV(GLsizei length, const GLvoid * pointer);
extern void cr_glVertexAttrib1d(GLuint index, GLdouble x);
extern void cr_glVertexAttrib1dARB(GLuint index, GLdouble x);
extern void cr_glVertexAttrib1dNV(GLuint index, GLdouble x);
extern void cr_glVertexAttrib1dv(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib1dvARB(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib1dvNV(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib1f(GLuint index, GLfloat x);
extern void cr_glVertexAttrib1fARB(GLuint index, GLfloat x);
extern void cr_glVertexAttrib1fNV(GLuint index, GLfloat x);
extern void cr_glVertexAttrib1fv(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib1fvARB(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib1fvNV(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib1s(GLuint index, GLshort x);
extern void cr_glVertexAttrib1sARB(GLuint index, GLshort x);
extern void cr_glVertexAttrib1sNV(GLuint index, GLshort x);
extern void cr_glVertexAttrib1sv(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib1svARB(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib1svNV(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
extern void cr_glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
extern void cr_glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
extern void cr_glVertexAttrib2dv(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib2dvARB(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib2dvNV(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
extern void cr_glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
extern void cr_glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
extern void cr_glVertexAttrib2fv(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib2fvARB(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib2fvNV(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
extern void cr_glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
extern void cr_glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
extern void cr_glVertexAttrib2sv(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib2svARB(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib2svNV(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void cr_glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void cr_glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void cr_glVertexAttrib3dv(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib3dvARB(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib3dvNV(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void cr_glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void cr_glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void cr_glVertexAttrib3fv(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib3fvARB(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib3fvNV(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
extern void cr_glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
extern void cr_glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
extern void cr_glVertexAttrib3sv(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib3svARB(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib3svNV(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4Nbv(GLuint index, const GLbyte * v);
extern void cr_glVertexAttrib4NbvARB(GLuint index, const GLbyte * v);
extern void cr_glVertexAttrib4Niv(GLuint index, const GLint * v);
extern void cr_glVertexAttrib4NivARB(GLuint index, const GLint * v);
extern void cr_glVertexAttrib4Nsv(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4NsvARB(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void cr_glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void cr_glVertexAttrib4Nubv(GLuint index, const GLubyte * v);
extern void cr_glVertexAttrib4NubvARB(GLuint index, const GLubyte * v);
extern void cr_glVertexAttrib4Nuiv(GLuint index, const GLuint * v);
extern void cr_glVertexAttrib4NuivARB(GLuint index, const GLuint * v);
extern void cr_glVertexAttrib4Nusv(GLuint index, const GLushort * v);
extern void cr_glVertexAttrib4NusvARB(GLuint index, const GLushort * v);
extern void cr_glVertexAttrib4bv(GLuint index, const GLbyte * v);
extern void cr_glVertexAttrib4bvARB(GLuint index, const GLbyte * v);
extern void cr_glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void cr_glVertexAttrib4dv(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib4dvARB(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib4dvNV(GLuint index, const GLdouble * v);
extern void cr_glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void cr_glVertexAttrib4fv(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib4fvARB(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib4fvNV(GLuint index, const GLfloat * v);
extern void cr_glVertexAttrib4iv(GLuint index, const GLint * v);
extern void cr_glVertexAttrib4ivARB(GLuint index, const GLint * v);
extern void cr_glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void cr_glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void cr_glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void cr_glVertexAttrib4sv(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4svARB(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4svNV(GLuint index, const GLshort * v);
extern void cr_glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void cr_glVertexAttrib4ubv(GLuint index, const GLubyte * v);
extern void cr_glVertexAttrib4ubvARB(GLuint index, const GLubyte * v);
extern void cr_glVertexAttrib4ubvNV(GLuint index, const GLubyte * v);
extern void cr_glVertexAttrib4uiv(GLuint index, const GLuint * v);
extern void cr_glVertexAttrib4uivARB(GLuint index, const GLuint * v);
extern void cr_glVertexAttrib4usv(GLuint index, const GLushort * v);
extern void cr_glVertexAttrib4usvARB(GLuint index, const GLushort * v);
extern void cr_glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
extern void cr_glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);
extern void cr_glVertexAttribPointerNV(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glVertexAttribs1dvNV(GLuint index, GLsizei n, const GLdouble * v);
extern void cr_glVertexAttribs1fvNV(GLuint index, GLsizei n, const GLfloat * v);
extern void cr_glVertexAttribs1svNV(GLuint index, GLsizei n, const GLshort * v);
extern void cr_glVertexAttribs2dvNV(GLuint index, GLsizei n, const GLdouble * v);
extern void cr_glVertexAttribs2fvNV(GLuint index, GLsizei n, const GLfloat * v);
extern void cr_glVertexAttribs2svNV(GLuint index, GLsizei n, const GLshort * v);
extern void cr_glVertexAttribs3dvNV(GLuint index, GLsizei n, const GLdouble * v);
extern void cr_glVertexAttribs3fvNV(GLuint index, GLsizei n, const GLfloat * v);
extern void cr_glVertexAttribs3svNV(GLuint index, GLsizei n, const GLshort * v);
extern void cr_glVertexAttribs4dvNV(GLuint index, GLsizei n, const GLdouble * v);
extern void cr_glVertexAttribs4fvNV(GLuint index, GLsizei n, const GLfloat * v);
extern void cr_glVertexAttribs4svNV(GLuint index, GLsizei n, const GLshort * v);
extern void cr_glVertexAttribs4ubvNV(GLuint index, GLsizei n, const GLubyte * v);
extern void cr_glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
extern void cr_glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
extern void cr_glWindowPos2d(GLdouble x, GLdouble y);
extern void cr_glWindowPos2dARB(GLdouble x, GLdouble y);
extern void cr_glWindowPos2dv(const GLdouble * v);
extern void cr_glWindowPos2dvARB(const GLdouble * v);
extern void cr_glWindowPos2f(GLfloat x, GLfloat y);
extern void cr_glWindowPos2fARB(GLfloat x, GLfloat y);
extern void cr_glWindowPos2fv(const GLfloat * v);
extern void cr_glWindowPos2fvARB(const GLfloat * v);
extern void cr_glWindowPos2i(GLint x, GLint y);
extern void cr_glWindowPos2iARB(GLint x, GLint y);
extern void cr_glWindowPos2iv(const GLint * v);
extern void cr_glWindowPos2ivARB(const GLint * v);
extern void cr_glWindowPos2s(GLshort x, GLshort y);
extern void cr_glWindowPos2sARB(GLshort x, GLshort y);
extern void cr_glWindowPos2sv(const GLshort * v);
extern void cr_glWindowPos2svARB(const GLshort * v);
extern void cr_glWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
extern void cr_glWindowPos3dv(const GLdouble * v);
extern void cr_glWindowPos3dvARB(const GLdouble * v);
extern void cr_glWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
extern void cr_glWindowPos3fv(const GLfloat * v);
extern void cr_glWindowPos3fvARB(const GLfloat * v);
extern void cr_glWindowPos3i(GLint x, GLint y, GLint z);
extern void cr_glWindowPos3iARB(GLint x, GLint y, GLint z);
extern void cr_glWindowPos3iv(const GLint * v);
extern void cr_glWindowPos3ivARB(const GLint * v);
extern void cr_glWindowPos3s(GLshort x, GLshort y, GLshort z);
extern void cr_glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
extern void cr_glWindowPos3sv(const GLshort * v);
extern void cr_glWindowPos3svARB(const GLshort * v);
extern void cr_glZPixCR(GLsizei width, GLsizei height, GLenum format, GLenum type, GLenum ztype, GLint zparm, GLint length, const GLvoid * pixels);
#endif /* __CR_GL_H__ */
