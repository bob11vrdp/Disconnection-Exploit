#include <ntddk.h>

NTSTATUS
MyMapPhysicalToVirtual(PVOID* virtOut, PHYSICAL_ADDRESS phys, PHYSICAL_ADDRESS physLen) {
	NTSTATUS Status = STATUS_UNSUCCESSFUL;
	UNICODE_STRING unicodeStr;
	OBJECT_ATTRIBUTES objAttr;
	HANDLE physMemHandle;

	RtlInitUnicodeString(&unicodeStr, L"\\Device\\PhysicalMemory");
	InitializeObjectAttributes(
		&objAttr,
		&unicodeStr,
		OBJ_CASE_INSENSITIVE | OBJ_KERNEL_HANDLE,
		(HANDLE)NULL,
		(PSECURITY_DESCRIPTOR)NULL);

	// Open a handle to the physical-memory section object.
	if ((Status = ZwOpenSection(&physMemHandle, SECTION_ALL_ACCESS, &objAttr)) != STATUS_SUCCESS) {
		return Status;
	}

	PVOID virt = NULL;
	Status = ZwMapViewOfSection(
		physMemHandle,
		NtCurrentProcess(),
		&virt,
		0L,
		(ULONG_PTR)physLen.QuadPart,
		&phys,
		(PULONG_PTR)(&(physLen.QuadPart)),
		ViewUnmap,
		0,
		PAGE_READWRITE | PAGE_WRITECOMBINE);
	if (Status != STATUS_SUCCESS) {
		return Status;
	}

	*virtOut = virt;
	ZwClose(physMemHandle);
	return STATUS_SUCCESS;
}

NTSTATUS 
MyUnmapVirtual(PVOID virt) {
	return ZwUnmapViewOfSection(NtCurrentProcess(), virt);
}
